{"version":3,"sources":["components/ScientificCalculator.js","serviceWorker.js","service/helper.js","service/auth.js","components/Login.js","components/Registration.js","components/ResetPasswordLink.js","components/ResetPassword.js","components/SimpleCalculator.js","components/UnitConverter.js","components/SaveList.js","components/Picker.js","components/Header.js","components/Footer.js","components/Main.js","App.js","index.js"],"names":["AutoScalingText","state","scale","this","node","actualScale","parentNode","offsetWidth","setState","className","style","transform","ref","props","children","Component","CalculatorDisplay","value","language","navigator","isNumeric","forEach","key","includes","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","endsWith","Object","is","NaN","CalculatorKey","onPress","onPoint","CalculatorOperations","prevValue","nextValue","nthRoot","Math","pow","xPowY","yPowX","logY","log","ScientificCalculator","displayValue","operator","waitingForOperand","done","shift","degree","ee","isMemoryActive","isBracketsActive","isLeftBracket","isRightBracket","isDigit","isOperator","countBracket","checkLeftBracket","memory","memory_plus","memory_minus","memory_recall","isDot","handleShiftClick","handleDegreeClick","handleKeyDown","event","test","preventDefault","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","substring","length","newValue","String","fixedDigits","replace","toFixed","digit","hasDot","integer","split","PI","exp","nextOperator","eval","inputValue","currentValue","toPrecision","result","random","sin","cos","tan","sinh","cosh","tanh","asin","acos","console","atan","asinh","acosh","atanh","sqrt","cbrt","document","addEventListener","removeEventListener","prevState","temp","toString","i","resultNegative","j","log10","log2","clearText","id","leftBracket","rightBracket","memoryClear","memoryPlus","memoryMinus","memoryRecall","toggleSign","pow2","pow3","exponential","twoPowX","tenPowX","multiplicativeInverse","factorial","sinInverse","cosInverse","tanInverse","sinhInverse","coshInverse","tanhInverse","rand","urlsToCache","window","self","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete","formatName","str","s","charAt","toUpperCase","slice","join","randomizers","name","type","quantityLabel","axios","defaults","baseURL","headers","common","localStorage","getItem","handleError","e","defaultMessage","data","message","code","error","toast","handleSuccess","success","hasError","res","tryCatch","cb","catch","setToken","users","tokens","setItem","access","token","refresh","getUser","a","get","login","form","post","signup","logout","refreshToken","clear","forgotPassword","email","resetPassword","query","password","randomize","getRandomizerType","onSubmitRandomizer","randomizer","dataset","quantity","payload","filter","ds","saveRandomizer","randomizerId","patch","getRandomizer","results","sort","b","createdAt","Date","exportRandomzier","responseType","fileURL","URL","createObjectURL","Blob","fileLink","createElement","href","setAttribute","body","appendChild","click","Login","history","useHistory","dispatch","React","useContext","AuthContext","useForm","criteriaMode","register","errors","handleSubmit","onSubmit","user","push","placeholder","required","pattern","render","messages","entries","to","Registration","watch","confirmPassword","useRef","current","minLength","validate","ResetPasswordLink","ResetPassword","location","search","maxLength","SimpleCalculator","displayValue1","displayValue2","selectedType","unit1","unit2","types","area","temperature","volume","mass","speed","time","active","changeSelectOptionHandler","bind","target","options","formatted_buttons","onClick","el","onChange","displayTmp","unitTmp","converted","SaveList","useState","randomizerList","setRandomizerList","init","list","useEffect","idx","Array","isArray","Picker","label","useLocation","setResult","setRandomizerId","reset","each","colSpan","item","_name","selected","rows","cols","defaultValue","min","max","marginTop","Header","showMenu","setShowMenu","showMenuSide","setShowMenuSide","drop","onLogout","isAuthenticated","display","Footer","Main","Consumer","exact","path","component","UnitConverter","createContext","initialState","role","alert","show","msg","reducer","action","App","useReducer","Provider","ReactDOM","StrictMode","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.f30ecd48.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/ScientificCalculator.css\";\nimport PointTarget from \"react-point\";\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1,\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale}, ${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n    const language = navigator.language || \"en-US\";\n    const escapedKeys = [\" e \", \"E\", \"*\", \"(\", \")\", \"r\", \"o\"];\n    let isNumeric = true;\n\n    escapedKeys.forEach((key) => {\n      if (value.includes(key)) isNumeric = false;\n    });\n\n    const parsedValue = isNumeric ? parseFloat(value) : value;\n\n    let formattedValue = parsedValue.toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 10,\n    });\n\n    // if (this.isBracketsActive === false) {\n    //     const match = value.match(/\\.\\d*?(0*)$/);\n\n    // if (match)\n    // formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    // }\n\n    if (value.endsWith('.')) formattedValue += '.';\n\n    if (\n      formattedValue === \"∞\" ||\n      formattedValue === \"NaN\" ||\n      Object.is(formattedValue, NaN)\n    )\n      formattedValue = \"Error\";\n\n    return (\n      <div {...props}>\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue,\n  nthRoot: (prevValue, nextValue) => Math.pow(nextValue, 1 / prevValue),\n  xPowY: (prevValue, nextValue) => Math.pow(prevValue, nextValue),\n  yPowX: (prevValue, nextValue) => Math.pow(nextValue, prevValue),\n  logY: (prevValue, nextValue) => Math.log(nextValue) / Math.log(prevValue),\n};\n\nclass ScientificCalculator extends Component {\n  state = {\n    value: null,\n    displayValue: \"0\",\n    operator: null,\n    waitingForOperand: false,\n    done: false,\n    shift: false,\n    degree: false,\n    ee: false,\n    isMemoryActive: false,\n    isBracketsActive: false,\n    isLeftBracket: false,\n    isRightBracket: false,\n    isDigit: false,\n    isOperator: false,\n    countBracket: 0,\n    checkLeftBracket: false,\n    memory: {\n      memory_plus: 0,\n      memory_minus: 0,\n      memory_recall: null,\n    },\n    isDot: false,\n  };\n\n  handleShiftClick = () => {\n    this.setState((state) => {\n      return {\n        shift: !state.shift,\n      };\n    });\n  };\n\n  handleDegreeClick = () => {\n    this.setState((state) => {\n      return {\n        degree: !state.degree,\n      };\n    });\n  };\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      done: false,\n      ee: false,\n      isMemoryActive: false,\n      isBracketsActive: false,\n      isRightBracket: false,\n      isLeftBracket: false,\n      isDigit: false,\n      isOperator: false,\n      countBracket: 0,\n      checkLeftBracket: false,\n      isDot: false,\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\",\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\",\n    });\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    // if(this.state.isbracketsActive){\n    //     return this.setState({ displayValue: \"-\" + displayValue})\n    // }\n\n    this.setState({\n      displayValue: String(newValue),\n    });\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0) return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2)),\n      done: true,\n    });\n  }\n\n  inputDot() {\n    const {\n      displayValue,\n      waitingForOperand,\n      isRightBracket,\n      isBracketsActive,\n      countBracket,\n      isMemoryActive,\n      isDot,\n    } = this.state;\n\n    if (isBracketsActive === true && countBracket === 0) {\n      return this.setState({\n        displayValue: displayValue + \"*0.\",\n        waitingForOperand: false,\n      });\n    }\n\n    if (waitingForOperand === true) {\n        this.setState({ displayValue: '0.', waitingForOperand: false });\n    } else if (isDot === true) {\n        this.setState({\n            displayValue: displayValue + '.',\n            waitingForOperand: false,\n            isDot: true,\n        });\n    } else if (isMemoryActive === true) {\n        this.setState({\n            displayValue: '0.',\n            waitingForOperand: false,\n            isDot: true,\n        });\n    } else if (!/\\./.test(displayValue)) {\n        this.setState({\n            displayValue: displayValue + '.',\n            waitingForOperand: false,\n            isDot: true,\n        });\n    }\n  }\n\n  inputDigit(digit) {\n    const {\n      displayValue,\n      waitingForOperand,\n      done,\n      isBracketsActive,\n      isRightBracket,\n      countBracket,\n      isOperator,\n      isDot,\n    } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false,\n        isDigit: true,\n      });\n    } else {\n      const hasDot = displayValue.includes(\".\");\n      const integer = displayValue.split(\".\")[0];\n\n      if (!hasDot && integer.length >= 10) return;\n\n      if (digit === Math.PI || digit === Math.exp(1)) {\n          this.clearDisplay();\n          return this.setState({\n              displayValue: String(digit),\n              isDigit: true,\n              isOperator: false,\n          });\n      }\n\n      if (done === true) {\n        this.clearAll();\n        this.setState({\n          displayValue: String(digit),\n          isDigit: true,\n          isOperator: false,\n        });\n      } else if (isDot === true) {\n        this.setState({ displayValue: displayValue + digit })\n      } else if (isBracketsActive === true && isOperator === true && countBracket === 0) {\n           this.setState({\n              displayValue: displayValue + '*' + digit,\n              isRightBracket: false,\n              isDigit: true,\n              isOperator: false,\n          });\n      } else {\n          this.setState({\n              displayValue: displayValue === '0' ? String(digit) : displayValue + digit,\n              isDigit: true,\n              isOperator: true,\n              checkLeftBracket: false,\n          });\n      }\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator,\n      waitingForOperand,\n      isMemoryActive,\n      isBracketsActive,\n      isRightBracket,\n      isLeftBracket,\n      isDigit,\n      isOperator,\n      ee,\n      countBracket,\n    } = this.state;\n\n    // this.setState({ isOperator: true, isDigit: false }); //left brackets with *( and (\n\n    if (nextOperator === \"=\" && countBracket !== 0) {\n      return this.setState({\n        displayValue: \"Error\",\n        isBracketsActive: false,\n        done: true,\n      });\n    }\n\n    // if (isRightBracket === true) {\n    //     this.setState({ isRightBracket: false });\n    // }\n\n    if (isOperator === false) {\n      return this.setState({ displayValue });\n    }\n\n    if (isBracketsActive === true && nextOperator === \"=\") {\n      return this.setState({\n        displayValue: String(eval(displayValue)),\n        isBracketsActive: false,\n        done: true,\n      });\n    } else if (isBracketsActive === true) {\n      // if (isLeftBracket === true && isDigit === false && isOperator === true) {\n      // if (nextOperator === '/' || nextOperator === '*') {\n      //     this.setState({ displayValue });\n      // } else {\n\n      if (isDigit) {\n        this.setState({\n          displayValue: displayValue + nextOperator,\n          isOperator: false,\n          isDigit: false,\n          checkLeftBracket: false,\n        });\n      }\n\n      // }\n      // }\n    } else {\n      const inputValue = parseFloat(displayValue);\n\n      // ee calculation\n      if (ee === true) {\n        const currentValue = displayValue.replace(/\\s/g, \"\");\n        return this.setState({\n          displayValue: parseFloat(currentValue).toPrecision(),\n          done: true,\n          ee: false,\n        });\n      }\n\n      if (value == null) {\n        this.setState({\n          value: inputValue,\n        });\n      } else if (\n        (operator && waitingForOperand === false) ||\n        (operator && isMemoryActive === true)\n      ) {\n        const currentValue = parseFloat(value) || 0;\n        const newValue = CalculatorOperations[operator](\n          currentValue,\n          inputValue\n        );\n\n        this.setState({\n          value: newValue,\n          displayValue: String(newValue),\n          // isRightBracket: false,\n        });\n      }\n\n      this.setState({\n        waitingForOperand: true,\n        operator: nextOperator,\n      });\n    }\n  }\n\n  leftBracket() {\n    const {\n      displayValue,\n      isDigit,\n      isOperator,\n      countBracket,\n      checkLeftBracket,\n    } = this.state;\n\n    if (displayValue === \"0\" || displayValue === \"Error\") {\n      this.setState({\n        displayValue: \"(\",\n        isBracketsActive: true,\n        isLeftBracket: true,\n        isOperator: true,\n        countBracket: countBracket + 1,\n        checkLeftBracket: true,\n      });\n    } else if (isOperator === false || checkLeftBracket === true) {\n      this.setState({\n        displayValue: displayValue + \"(\",\n        isBracketsActive: true,\n        isLeftBracket: true,\n        isOperator: true,\n        countBracket: countBracket + 1,\n        checkLeftBracket: true,\n      });\n    } else {\n      this.setState({\n        displayValue: displayValue + \"*(\",\n        isBracketsActive: true,\n        isLeftBracket: true,\n        isOperator: true,\n        countBracket: countBracket + 1,\n        checkLeftBracket: true,\n      });\n    }\n\n    // this.setState({\n    //     displayValue: displayValue === '0' ? '(' : displayValue + isOperator === 'true' ? displayValue + '(' : '*(',\n    //     isbracketsActive: true\n    // })\n\n    // this.setState({\n    //     displayValue:\n    //         displayValue === '0' || displayValue === 'Error'\n    //             ? '('\n    //             : isDigit === true && isOperator === false\n    //             ? displayValue + '*('\n    //             : displayValue + '(',\n    //     isbracketsActive: true,\n    //     isRightBracket: false,\n    //     isLeftBracket: true,\n    //     isDigit: false,\n    // });\n  }\n\n  rightBracket() {\n    const {\n      displayValue,\n      isLeftBracket,\n      isDigit,\n      done,\n      countBracket,\n    } = this.state;\n\n    if (isLeftBracket && isDigit) {\n      this.setState({\n        displayValue: displayValue + \")\",\n        countBracket: countBracket - 1,\n      });\n    }\n    // else if (isLeftBracket)\n    // {\n    //     this.setState({\n    //         displayValue: displayValue + ')',\n    //     });\n    // }\n\n    // if (isLeftBracket && isDigit) {\n    //     this.setState({\n    //         displayValue: displayValue === '0' ? ')' : displayValue + ')',\n    //         isbracketsActive: true,\n    //         isRightBracket: true,\n    //     });\n    // }\n  }\n\n  multiplicativeInverse() {\n    const { displayValue } = this.state;\n\n    if (displayValue === \"0\") {\n      this.setState({ displayValue: \"Not a number\" });\n    }\n\n    const result = String(1 / displayValue);\n    this.setState({ displayValue: result, done: true });\n  }\n\n  exponential() {\n    const { displayValue } = this.state;\n\n    if (displayValue === \"0\") {\n      return this.setState({ displayValue: \"1\" });\n    }\n\n    const result = String(Math.exp(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  rand() {\n    this.setState({ displayValue: String(Math.random()) });\n  }\n\n  sin() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.sin(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        Math.sin((parseFloat(displayValue) * Math.PI) / 180)\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  cos() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.cos(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(Math.cos((parseInt(displayValue) * Math.PI) / 180));\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  tan() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.tan(displayValue)),\n        done: true,\n      });\n    } else {\n      if (displayValue === \"90\" || displayValue === \"270\") {\n        this.setState({ displayValue: \"Not a number\" });\n      } else {\n        const result = String(\n          Math.tan((parseFloat(displayValue) * Math.PI) / 180)\n        );\n        this.setState({ displayValue: result, done: true });\n      }\n    }\n  }\n\n  sinh() {\n    const { displayValue } = this.state;\n    const result = String(Math.sinh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  cosh() {\n    const { displayValue } = this.state;\n    const result = String(Math.cosh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  tanh() {\n    const { displayValue } = this.state;\n    const result = String(Math.tanh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  sinInverse() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.asin(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.asin(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  cosInverse() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.acos(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.acos(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  tanInverse() {\n    console.log(\"hello\");\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.atan(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.atan(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  sinhInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.asinh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  coshInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.acosh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  tanhInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.atanh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  sqrt() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.sqrt(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  cbrt() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.cbrt(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === \"Enter\") key = \"=\";\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key);\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"%\") {\n      event.preventDefault();\n      this.inputPercent();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n    } else if (key === \"Clear\") {\n      event.preventDefault();\n\n      if (this.state.displayValue !== \"0\") {\n        this.clearDisplay();\n      } else {\n        this.clearAll();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  memoryClear() {\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: 0,\n        memory_minus: 0,\n        memory_recall: null,\n      },\n      isMemoryActive: false,\n    }));\n  }\n\n  memoryPlus() {\n    let temp =\n      parseFloat(this.state.displayValue) + this.state.memory.memory_plus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: temp,\n      },\n      isMemoryActive: true,\n    }));\n  }\n\n  memoryMinus() {\n    let temp =\n      parseInt(this.state.displayValue) + this.state.memory.memory_minus;\n    this.setState((prevState) => ({\n        memory: {\n            ...prevState.memory,\n            memory_minus: temp,\n        },\n        isMemoryActive: true,\n    }));\n  }\n\n  memoryRecall() {\n    const { isMemoryActive } = this.state;\n    let temp = (\n      this.state.memory.memory_plus - this.state.memory.memory_minus\n    ).toString();\n\n    if (isMemoryActive === true) {\n        this.setState({\n            displayValue: temp,\n            isMemoryActive: true,\n        });\n    } else {\n        this.setState({\n            displayValue: temp,\n            isMemoryActive: false,\n        });\n    }\n  }\n\n  factorial() {\n    const { displayValue } = this.state;\n\n    if (displayValue === \"1\" || displayValue === \"-1\") {\n      return this.setState({ displayValue });\n    } else if (parseInt(displayValue) > 1) {\n      var result = 1;\n\n      for (var i = 1; i <= parseInt(displayValue); ++i) {\n        result *= i;\n      }\n\n      return this.setState({ displayValue: String(result), done: true });\n    } else if (parseInt(displayValue) < -1) {\n      var resultNegative = 1;\n\n      for (var j = -1; j >= parseInt(displayValue); j--) {\n        resultNegative *= j;\n      }\n\n      return this.setState({\n        displayValue: String(resultNegative),\n        done: true,\n      });\n    }\n  }\n\n  log10() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"Not a Number\" });\n    }\n\n    this.setState({\n      displayValue: String(Math.log10(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  log2() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"Not a Number\" });\n    }\n\n    this.setState({\n      displayValue: String(Math.log2(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  log() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"Not a Number\" });\n    }\n\n    this.setState({\n      displayValue: String(Math.log(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  pow2() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(parseFloat(displayValue), 2)),\n      done: true,\n    });\n  }\n\n  pow3() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(parseFloat(displayValue), 3)),\n      done: true,\n    });\n  }\n\n  tenPowX() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(10, parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  twoPowX() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(2, parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  ee() {\n    const { displayValue, done, ee } = this.state;\n\n    if (done === false) {\n      if (ee === true) {\n        this.setState({ displayValue });\n      } else {\n        this.setState({ displayValue: displayValue + \" e \", ee: true });\n      }\n    }\n  }\n\n  render() {\n    const { displayValue } = this.state;\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    return (\n      <div id=\"scientific-calculator\">\n        <h1 className=\"blue-color align-center scope-title\">\n          <span className=\"yellow-color\">{\"[ \"}</span>Scientific Calculator\n          <span className=\"yellow-color\">{\" ]\"}</span>\n        </h1>\n        <div className=\"calculator-body\">\n          <div>\n            <div className=\"result\">\n              <p>\n                <CalculatorDisplay value={displayValue} />\n              </p>\n            </div>\n          </div>\n          <div className=\"button\">\n            <div className=\"align-center\">\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.leftBracket()}\n              >\n                {\"(\"}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.rightBracket()}\n              >\n                {\")\"}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryClear()}\n              >\n                MC\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryPlus()}\n              >\n                M+\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryMinus()}\n              >\n                M-\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryRecall()}\n              >\n                MR\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() =>\n                  clearDisplay ? this.clearDisplay() : this.clearAll()\n                }\n              >\n                {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.toggleSign()}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.inputPercent()}\n              >\n                %\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"/\")}\n              >\n                ÷\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={this.handleShiftClick}\n                >\n                  1\n                  <sup>\n                    <small>st</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={this.handleShiftClick}\n                >\n                  2\n                  <sup>\n                    <small>nd</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.pow2()}\n              >\n                x\n                <sup>\n                  <small>2</small>\n                </sup>\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.pow3()}\n              >\n                x\n                <sup>\n                  <small>3</small>\n                </sup>\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.performOperation(\"xPowY\")}\n              >\n                x\n                <sup>\n                  <small>y</small>\n                </sup>\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.exponential()}\n                >\n                  e\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={() => this.performOperation(\"yPowX\")}\n                >\n                  y\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.tenPowX()}\n                >\n                  10\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={() => this.twoPowX()}\n                >\n                  2\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(7)}\n              >\n                7\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(8)}\n              >\n                8\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(9)}\n              >\n                9\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"*\")}\n              >\n                ×\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-1\"\n                onPress={() => this.multiplicativeInverse()}\n              >\n                1/x\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.sqrt()}\n              >\n                <sup>\n                  <small>2</small>\n                </sup>\n                √\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.cbrt()}\n              >\n                <sup>\n                  <small>3</small>\n                </sup>\n                √\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.performOperation(\"nthRoot\")}\n              >\n                <sup>\n                  <small>x</small>\n                </sup>\n                √\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-1\"\n                  onPress={() => this.log()}\n                >\n                  ln\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY--1\"\n                  onPress={() => this.performOperation(\"logY\")}\n                >\n                  log\n                  <sub>\n                    <small>y</small>\n                  </sub>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY--1\"\n                  onPress={() => this.log10()}\n                >\n                  log\n                  <sub>\n                    <small>10</small>\n                  </sub>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY--1\"\n                  onPress={() => this.log2()}\n                >\n                  log\n                  <sub>\n                    <small>2</small>\n                  </sub>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(4)}\n              >\n                4\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(5)}\n              >\n                5\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(6)}\n              >\n                6\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"-\")}\n              >\n                −\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.factorial()}\n              >\n                x!\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.sin()}\n                >\n                  sin\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.sinInverse()}\n                >\n                  sin\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.cos()}\n                >\n                  cos\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.cosInverse()}\n                >\n                  cos\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.tan()}\n                >\n                  tan\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.tanInverse()}\n                >\n                  tan\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.inputDigit(Math.exp(1))}\n              >\n                e\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.ee()}\n              >\n                EE\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(1)}\n              >\n                1\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(2)}\n              >\n                2\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(3)}\n              >\n                3\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"operator \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.performOperation(\"+\")}\n              >\n                +\n              </CalculatorKey>\n              {!this.state.degree ? (\n                <CalculatorKey\n                  className={\n                    \"blue-light-background \" +\n                    (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                  }\n                  onPress={this.handleDegreeClick}\n                >\n                  Rad\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className={\n                    \"dark-blue-background \" +\n                    (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                  }\n                  onPress={this.handleDegreeClick}\n                >\n                  Deg\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.sinh()}\n                >\n                  sinh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.sinhInverse()}\n                >\n                  sinh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.cosh()}\n                >\n                  cosh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.coshInverse()}\n                >\n                  cosh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.tanh()}\n                >\n                  tanh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.tanhInverse()}\n                >\n                  tanh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(Math.PI)}\n              >\n                π\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.rand()}\n              >\n                Rand\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn zero-num \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(0)}\n              >\n                0\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"dot-btn \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDot()}\n              >\n                .\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"operator \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.performOperation(\"=\")}\n              >\n                =\n              </CalculatorKey>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScientificCalculator;\n","let CACHE_NAME = \"kashio\";\nconst urlsToCache = [\"/\", \"/scientific-calculator\"];\n\n// Install a service worker\nwindow.self.addEventListener(\"install\", (event) => {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(function (cache) {\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\n// Cache and return requests\nwindow.self.addEventListener(\"fetch\", (event) => {\n  event.respondWith(\n    caches.match(event.request).then(function (response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n      return fetch(event.request);\n    })\n  );\n});\n\n// Update a service worker\nwindow.self.addEventListener(\"activate\", (event) => {\n  let cacheWhitelist = [\"your-app-name\"];\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});\n","export const formatName = (str, key = \"-\") => {\n  if (typeof str !== \"string\") return str;\n\n  return str\n    .split(key)\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(\" \");\n};\n\nexport const randomizers = [\n  {\n    name: \"team-generator\",\n    type: 2,\n    quantityLabel: \"Groups\",\n  },\n  {\n    name: \"custom-list\",\n    type: 3,\n    quantityLabel: \"Quantity\",\n  },\n  { name: \"name-picker\" },\n  { name: \"yes-or-no\" },\n  { name: \"decision-maker\" },\n  { name: \"random-picker\" },\n];\n","import axios from \"axios\";\nimport { formatName } from \"../service/helper\";\nimport { toast } from \"react-toastify\";\n\nconst baseUrl = \"https://api.piseth.me/v1\";\n\naxios.defaults.baseURL = baseUrl;\naxios.defaults.headers.common[\"Authorization\"] =\n  \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\");\n\nconst handleError = (e, defaultMessage) => {\n  const { message, code } = e.response?.data;\n  const error = defaultMessage ?? `Error ${code}: ${message}`;\n  console.error(e.response);\n  toast.error(error);\n};\n\nconst handleSuccess = (defaultMessage) => {\n  toast.success(defaultMessage);\n};\n\nconst hasError = (res) => {\n  return res.error;\n};\n\nconst tryCatch = (cb) => {\n  return cb\n    .then(({ data }) => ({ ...data, error: false }))\n    .catch((e) => {\n      handleError(e);\n      return { error: true };\n    });\n};\n\nconst setToken = ({ users, tokens }) => {\n  localStorage.setItem(\"ACCESS_TOKEN\", tokens.access.token);\n  localStorage.setItem(\"REFRESH_TOKEN\", tokens.refresh.token);\n\n  axios.defaults.headers.common[\"Authorization\"] =\n    \"Bearer \" + tokens.access.token;\n};\n\nexport const getUser = async () => {\n  const token = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (!token) return;\n\n  const res = await tryCatch(axios.get(\"/users/me\"));\n  if (!hasError(res)) return res;\n};\n\nexport const login = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/login\", form));\n\n  if (!hasError(res)) {\n    setToken(res);\n    handleSuccess(\"Welcome back!\");\n  }\n\n  return res;\n};\n\nexport const signup = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/register\", form));\n  if (!hasError(res)) {\n    setToken(res);\n\n    return res;\n  }\n};\n\nexport const logout = async (form) => {\n  await tryCatch(\n    axios.post(\"/auth/logout\", {\n      refreshToken: localStorage.getItem(\"REFRESH_TOKEN\"),\n    })\n  );\n\n  localStorage.clear();\n};\n\nexport const forgotPassword = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/forgot-password\", form));\n  if (!hasError(res))\n    handleSuccess(\"Reset Passowrd Link has been sent to \" + form.email);\n};\n\nexport const resetPassword = async ({ query, password }) => {\n  const res = await tryCatch(\n    axios.post(\"/auth/reset-password\" + query, { password })\n  );\n  if (!hasError(res)) handleSuccess(\"Password reset Successfully\");\n\n  return res;\n};\n\nexport const randomize = async (form) => {\n  const res = await tryCatch(axios.post(\"/randomizer\", form));\n  if (!hasError(res)) return res;\n\n  return {};\n};\n\nconst getRandomizerType = (type) => {\n  if (type === \"team-generator\") return \"group\";\n  if (type === \"custom-list\") return \"custom\";\n\n  return \"individual\";\n};\n\nexport const onSubmitRandomizer = async (randomizer) => {\n  const { dataset, type, quantity } = randomizer;\n\n  const payload = {\n    type: getRandomizerType(type),\n    dataset: dataset.split(\"\\n\").filter((ds) => ds !== \"\"),\n    quantity,\n    name: type,\n  };\n\n  return await randomize(payload);\n};\n\nexport const saveRandomizer = async (randomizerId) => {\n  const res = await tryCatch(axios.patch(`/randomizer/${randomizerId}`));\n\n  if (!hasError(res)) handleSuccess(\"Randomizer Saved Successfully.\");\n};\n\nexport const getRandomizer = async () => {\n  const res = await tryCatch(axios.get(\"/randomizer/me\"));\n\n  if (!hasError(res))\n    return res?.results\n      ?.sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1))\n      .map((res) => ({\n        ...res,\n        name: formatName(res.name),\n        createdAt: new Date(res.createdAt).toLocaleString(),\n      }));\n};\n\nexport const exportRandomzier = async () => {\n  axios\n    .get(`/randomizer/me/export `, {\n      responseType: \"blob\",\n    })\n    .then((response) => {\n      var fileURL = window.URL.createObjectURL(new Blob([response.data]));\n      var fileLink = document.createElement(\"a\");\n\n      fileLink.href = fileURL;\n      fileLink.setAttribute(\"download\", \"random.xls\");\n      document.body.appendChild(fileLink);\n\n      fileLink.click();\n    })\n    .catch(handleError);\n};\n","import React from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { Link } from \"react-router-dom\";\nimport { MdEmail, MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { login } from \"../service/auth\";\n\nimport { AuthContext } from \"../App\";\n\nconst Login = () => {\n  const history = useHistory();\n\n  const { dispatch } = React.useContext(AuthContext);\n  const { register, errors, handleSubmit } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = async (data) => {\n    const res = await login(data);\n\n    if (res.error)\n      return dispatch({\n        type: \"SET_USER\",\n      });\n\n    dispatch({\n      type: \"SET_USER\",\n      payload: res?.user,\n    });\n    return history.push(\"/team-generator\");\n  };\n\n  return (\n    <div id=\"login\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Login</h1>\n      <p className=\"yellow-color\">Let's get started</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: \"This is required\",\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"flex-container\">\n          <form>\n            {/* <input type=\"checkbox\" name=\"rememberMe\" />\n            <label value=\"rememberMe\">Remember Me</label> */}\n          </form>\n          <Link to=\"/reset-password-link\" className=\"forgot-pwd\">\n            Forgot Password?\n          </Link>\n        </div>\n        <p className=\"suggestion blue-color mt-50\">\n          Don't have any account yet\n          <span>\n            &#63;{\" \"}\n            <Link to=\"/registration\" className=\"yellow-color\">\n              Register here\n            </Link>\n          </span>\n        </p>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useRef } from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { Link } from \"react-router-dom\";\nimport { RiUser3Fill } from \"react-icons/ri\";\nimport { MdEmail, MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { signup, getUser } from \"../service/auth\";\nimport { AuthContext } from \"../App\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Registration = () => {\n  const history = useHistory();\n  const { dispatch } = React.useContext(AuthContext);\n  const { register, errors, handleSubmit, watch } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = async (data) => {\n    const { name, email, password, confirmPassword } = data;\n\n    if (password && password !== confirmPassword) return;\n\n    const res = await signup({ name, email, password });\n    if (res) {\n      const user = await getUser();\n      if (user) dispatch({ type: \"SET_USER\", payload: user });\n\n      return history.push(\"/\");\n    }\n  };\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div id=\"registration\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Registration</h1>\n      <p className=\"yellow-color\">Create your free account</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Username\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^[a-zA-Z0-9 ]+$/,\n                message: \"Letters and numbers are allowed only\",\n              },\n            })}\n          />\n          <RiUser3Fill className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"username\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: \"This is required\",\n              minLength: {\n                value: 8,\n                message: \"Password must have at least 8 characters\",\n              },\n              // maxLength: {\n              //   value: 20,\n              //   message: \"Password must have less than 20 characters\",\n              // },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            ref={register({\n              required: \"This is required\",\n              validate: (value) => {\n                return (\n                  value === password.current || \"The password does not match\"\n                );\n              },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"confirmPassword\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <p className=\"suggestion blue-color mt-50\">\n          Already have an account?{\" \"}\n          <span>\n            <Link to=\"/login\" className=\"yellow-color\">\n              Login\n            </Link>\n          </span>\n        </p>\n        <div>\n          <button type=\"submit\">Register</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n","import React from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { MdEmail } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { forgotPassword } from \"../service/auth\";\n\nconst ResetPasswordLink = () => {\n  const { register, errors, handleSubmit } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = (data) => forgotPassword(data);\n\n  return (\n    <div id=\"reset-password-link\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Reset Password</h1>\n      <p className=\"yellow-color\">Reset your password here</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"mt-50\">\n          <button type=\"submit\">Send Password Reset Link</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordLink;\n","import React, { useRef } from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { resetPassword } from \"../service/auth\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst ResetPassword = (props) => {\n  const history = useHistory();\n  const { register, errors, handleSubmit, watch } = useForm({\n    criteriaMode: \"all\",\n  });\n\n  const onSubmit = async (data) => {\n    const query = props.location.search;\n    const { password, confirmPassword } = data;\n    if (password && password !== confirmPassword) return;\n    const res = await resetPassword({ query, password });\n    if (!res.error) history.push(\"/login\");\n  };\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div id=\"reset-password\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Reset Password</h1>\n      <p className=\"yellow-color\">Reset your password here</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"New Password\"\n            ref={register({\n              required: \"This is required\",\n              minLength: {\n                value: 6,\n                message: \"Password must have at least 6 characters\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Password must have less than 20 characters\",\n              },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm New Password\"\n            ref={register({\n              required: \"This is required\",\n              validate: (value) =>\n                value === password.current || \"The password does not match\",\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"confirmPassword\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"mt-50\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport \"../css/SimpleCalculator.css\";\nimport PointTarget from \"react-point\";\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1,\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n    const language = navigator.language || \"en-US\";\n\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6,\n    });\n\n    // Add back missing .0 in e.g. 12.0\n    const match = value.match(/\\.\\d*?(0*)$/);\n\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n\n    if (formattedValue === \"∞\" || formattedValue === \"NaN\")\n      formattedValue = \"Error\";\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue,\n};\n\nclass SimpleCalculator extends Component {\n  state = {\n    value: null,\n    displayValue: \"0\",\n    operator: null,\n    waitingForOperand: false,\n    done: false,\n    isMemoryActive: false,\n    memory: {\n      memory_plus: 0,\n      memory_minus: 0,\n      memory_recall: null,\n    },\n    isDot: false,\n  };\n\n  memoryClear() {\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: 0,\n        memory_minus: 0,\n        memory_recall: null,\n      },\n      isMemoryActive: false,\n    }));\n  }\n\n  memoryPlus() {\n    // let temp= this.state.memory.memory_plus\n    let temp =\n      parseFloat(this.state.displayValue) + this.state.memory.memory_plus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: temp,\n      },\n      isMemoryActive: true,\n      // done: true,\n    }));\n  }\n\n  memoryMinus() {\n    let temp =\n      parseInt(this.state.displayValue) + this.state.memory.memory_minus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_minus: temp,\n      },\n      isMemoryActive: true,\n      // done: true,\n    }));\n  }\n\n  memoryRecall() {\n    const { displayValue, isMemoryActive, done } = this.state;\n    let temp = (\n      this.state.memory.memory_plus - this.state.memory.memory_minus\n    ).toString();\n\n    if (isMemoryActive === true) {\n      this.setState({\n          displayValue: temp,\n          isMemoryActive: true,\n          // done: true,\n      });\n    } else {\n      this.setState({\n          displayValue: temp,\n          isMemoryActive: false,\n          // done: false,\n      });\n    }\n\n\n    console.log('memory: ' + isMemoryActive)\n    console.log('done: ' + done)\n  }\n\n  clearAll() {\n    this.setState({\n        value: null,\n        displayValue: '0',\n        operator: null,\n        waitingForOperand: false,\n        done: false,\n        isMemoryActive: false,\n        isDot: false,\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\",\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\",\n    });\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    this.setState({\n      displayValue: String(newValue),\n    });\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0) return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2)),\n      done: true,\n    });\n  }\n\n  inputDot() {\n    const { displayValue, waitingForOperand, done, isMemoryActive, isDot } = this.state;\n\n    this.setState({ isDot: true });\n\n    if (waitingForOperand === true || isMemoryActive === true) {\n      this.setState({ displayValue: \"0.\", waitingForOperand: false});\n    } else if (isDot === true) {\n      this.setState({\n          displayValue: displayValue + '.',\n          waitingForOperand: false,\n          isDot: true,\n      });\n    } else if (isMemoryActive === true) {\n      this.setState({ displayValue: '0.', waitingForOperand: false, isDot: true });\n    } else if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + \".\",\n        waitingForOperand: false,\n        isDot: true,\n      });\n    }\n\n    console.log(isDot)\n  }\n\n  inputDigit(digit) {\n    const { displayValue, waitingForOperand, done, isDot } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false,\n      });\n    } else {\n      const hasDot = displayValue.includes(\".\");\n      const integer = displayValue.split(\".\")[0];\n\n      if (!hasDot && integer.length >= 10) return;\n\n      if (done === true) {\n        this.clearAll();\n        this.setState({ displayValue: String(digit) });\n      } else if (isDot === true) {\n        this.setState({ displayValue: displayValue + digit, });\n      } else {\n        this.setState({\n          displayValue:\n            displayValue === \"0\" ? String(digit) : displayValue + digit,\n        });\n      }\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator,\n      waitingForOperand,\n      isMemoryActive,\n    } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue,\n      });\n    } else if (\n      (operator && waitingForOperand === false) ||\n      (operator && isMemoryActive === true)\n    ) {\n      const currentValue = parseFloat(value) || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue),\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === \"Enter\") key = \"=\";\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key);\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"%\") {\n      event.preventDefault();\n      this.inputPercent();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n\n      if (this.state.displayValue !== \"0\") {\n        this.clearDisplay();\n      } else {\n        this.clearAll();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const { displayValue } = this.state;\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    return (\n      <div id=\"simple-calculator\">\n        <h1 className=\"blue-color align-center scope-title\">\n          <span className=\"yellow-color\">{\"[ \"}</span>Simple Calculator\n          <span className=\"yellow-color\">{\" ]\"}</span>\n        </h1>\n        <div className=\"calculator-body\">\n          <div className=\"resultContainer\">\n            <div className=\"result\">\n              <p>\n                <CalculatorDisplay value={displayValue} />\n              </p>\n            </div>\n          </div>\n          <div className=\"button\">\n            <div className=\"align-center\">\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryClear()}\n              >\n                MC\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryPlus()}\n              >\n                M+\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryMinus()}\n              >\n                M-\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryRecall()}\n              >\n                MR\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background clear-btn\"\n                onPress={() =>\n                  clearDisplay ? this.clearDisplay() : this.clearAll()\n                }\n              >\n                {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.toggleSign()}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.inputPercent()}\n              >\n                %\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"/\")}\n              >\n                ÷\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(7)}\n              >\n                7\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(8)}\n              >\n                8\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(9)}\n              >\n                9\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"*\")}\n              >\n                ×\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(4)}\n              >\n                4\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(5)}\n              >\n                5\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(6)}\n              >\n                6\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"-\")}\n              >\n                −\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(1)}\n              >\n                1\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(2)}\n              >\n                2\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(3)}\n              >\n                3\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"+\")}\n              >\n                +\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"zero-num blue-background\"\n                onPress={() => this.inputDigit(0)}\n              >\n                0\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDot()}\n              >\n                .\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"=\")}\n              >\n                =\n              </CalculatorKey>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SimpleCalculator;\n","import React, { Component } from \"react\";\nimport \"../css/UnitConverter.css\";\nimport PointTarget from \"react-point\";\nimport axios from \"axios\";\nimport { HiSwitchVertical } from \"react-icons/hi\";\nimport { IoMdReturnLeft } from \"react-icons/io\";\nimport { CgBackspace } from \"react-icons/cg\";\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1,\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n    const language = navigator.language || \"en-US\";\n    const escapedKeys = [\"e\"];\n    let isNumeric = true;\n\n    escapedKeys.forEach((key) => {\n      if (value.includes(key)) isNumeric = false;\n    });\n\n    const parsedValue = isNumeric ? parseFloat(value) : value;\n\n    let formattedValue = parsedValue.toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 10,\n    });\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    // if (value.endsWith('.')) formattedValue += '.';\n\n    return (\n      <div {...props}>\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nclass SimpleCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      displayValue1: \"0\",\n      displayValue2: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      selectedType: \"area\",\n      unit1: \"mm2\",\n      unit2: \"mm2\",\n      type: null,\n      types: {\n        area: [\"mm2\", \"cm2\", \"m2\", \"km2\", \"in2\", \"ft2\", \"mi2\"],\n        length: [\"mm\", \"cm\", \"km\", \"m\", \"in\", \"ft\", \"mi\"],\n        temperature: [\"C\", \"K\", \"F\", \"R\"],\n        volume: [\"l\", \"dl\", \"cl\", \"ml\", \"kl\", \"mm3\", \"cm3\", \"km3\", \"gal\"],\n        mass: [\"mg\", \"kg\", \"g\", \"oz\", \"lb\", \"t\"],\n        data: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"B\", \"KB\", \"MB\", \"GB\", \"TB\"],\n        speed: [\"m/s\", \"km/h\", \"m/h\", \"knot\", \"ft/s\"],\n        time: [\"ms\", \"s\", \"h\", \"d\", \"week\", \"month\", \"year\"],\n      },\n      active: \"area\",\n    };\n    this.changeSelectOptionHandler = this.changeSelectOptionHandler.bind(this);\n  }\n\n  changeSelectOptionHandler(event) {\n    this.setState({\n      selectedType: event.target.value,\n      unit1: this.state.types[event.target.value][0],\n      unit2: this.state.types[event.target.value][0],\n      displayValue1: \"0\",\n      displayValue2: \"0\",\n      active: event.target.value,\n    });\n    event.preventDefault();\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue1: \"0\",\n      displayValue2: \"0\",\n      operator: null,\n      waitingForOperand: false,\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue1: \"0\",\n      displayValue2: \"0\",\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue1 } = this.state;\n    this.setState({\n      displayValue1:\n        displayValue1.substring(0, displayValue1.length - 1) || \"0\",\n    });\n  }\n\n  toggleSign() {\n    const { displayValue1 } = this.state;\n    const newValue = parseFloat(displayValue1) * -1;\n\n    this.setState({\n      displayValue1: String(newValue),\n    });\n  }\n\n  inputDot() {\n    const { displayValue1, waitingForOperand } = this.state;\n\n    if (waitingForOperand === true) {\n      this.setState({ displayValue: \"0.\", waitingForOperand: false });\n    } else if (!/\\./.test(displayValue1)) {\n      this.setState({\n        displayValue1: displayValue1 + \".\",\n        waitingForOperand: false,\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const { displayValue1, waitingForOperand } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue1: String(digit),\n        waitingForOperand: false,\n      });\n    } else {\n      const hasDot = displayValue1.includes(\".\");\n      const integer = displayValue1.split(\".\")[0];\n\n      if (!hasDot && integer.length >= 10) return;\n\n      this.setState({\n        displayValue1:\n          displayValue1 === \"0\" ? String(digit) : displayValue1 + digit,\n      });\n    }\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    if (this.state.selectedType === \"\") {\n      this.setState({\n        selectedType: \"area\",\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    let options = null;\n    const { displayValue1, displayValue2, unit1, unit2 } = this.state;\n    const clearDisplay = displayValue1 !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    const handleChange = (event) => {\n      this.setState({\n        unit1: event.target.value,\n        displayValue2: \"0\",\n      });\n      event.preventDefault();\n    };\n\n    const handleChange2 = (event) => {\n      this.setState({\n        unit2: event.target.value,\n        displayValue2: \"0\",\n      });\n      event.preventDefault();\n    };\n\n    const getResult = () => {\n      axios\n        .get(\n          `https://converter.doxxie.live/convert?from=${this.state.unit1}&to=${this.state.unit2}&amount=${this.state.displayValue1}`\n        )\n        .then((res) => {\n          this.setState({\n            displayValue2: res.data.converted,\n          });\n        });\n    };\n    const buttons = [\n      \"area\",\n      \"length\",\n      \"temperature\",\n      \"volume\",\n      \"mass\",\n      \"data\",\n      \"speed\",\n      \"time\",\n    ];\n    const formatted_buttons = buttons.map((name) => (\n      <button\n        key={name}\n        onClick={this.changeSelectOptionHandler}\n        value={name}\n        className={this.state.active === name ? \"active\" : \"\"}\n      >\n        {name.charAt(0).toUpperCase() + name.slice(1)}\n      </button>\n    ));\n    const getSwitch = () => {\n      var displayTmp = displayValue1;\n      var unitTmp = unit1;\n      this.setState({\n        displayValue1: displayValue2,\n        displayValue2: displayTmp,\n        unit1: unit2,\n        unit2: unitTmp,\n      });\n    };\n\n    this.state.type = this.state.types[this.state.selectedType];\n\n    if (this.state.type) {\n      options = this.state.type.map((el) => <option key={el}>{el}</option>);\n    }\n\n    return (\n      <div id=\"unit-converter\">\n        <h1 className=\"blue-color align-center scope-title\">\n          <span className=\"yellow-color\">{\"[ \"}</span>Unit Converter\n          <span className=\"yellow-color\">{\" ]\"}</span>\n        </h1>\n        <div id=\"measurement\">{formatted_buttons}</div>\n        <div className=\"calculator-body\">\n          <div className=\"resultContainer\">\n            <div className=\"first-input\">\n              <select value={this.state.unit1} onChange={handleChange}>\n                {options}\n              </select>\n              <p>\n                <CalculatorDisplay value={displayValue1} />\n              </p>\n            </div>\n            <div className=\"second-input\">\n              <select value={this.state.unit2} onChange={handleChange2}>\n                {options}\n              </select>\n              <p>\n                <CalculatorDisplay value={displayValue2} />\n              </p>\n            </div>\n          </div>\n          <div className=\"unit-converter-btn\">\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(7)}\n            >\n              7\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(8)}\n            >\n              8\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(9)}\n            >\n              9\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-light-background\"\n              onPress={() => this.clearLastChar()}\n            >\n              <CgBackspace />\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(4)}\n            >\n              4\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(5)}\n            >\n              5\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(6)}\n            >\n              6\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-light-background\"\n              onPress={() =>\n                clearDisplay ? this.clearDisplay() : this.clearAll()\n              }\n            >\n              {clearText}\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(1)}\n            >\n              1\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(2)}\n            >\n              2\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(3)}\n            >\n              3\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-light-background\"\n              onPress={getSwitch}\n            >\n              <HiSwitchVertical className=\"switch-icon\" />\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.toggleSign()}\n            >\n              ±\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDigit(0)}\n            >\n              0\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"blue-background\"\n              onPress={() => this.inputDot()}\n            >\n              .\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"black-color yellow-background\"\n              onPress={getResult}\n            >\n              <IoMdReturnLeft />\n            </CalculatorKey>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SimpleCalculator;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/SaveList.css\";\n\nimport { getRandomizer, exportRandomzier } from \"../service/auth\";\n\nconst SaveList = () => {\n  const [randomizerList, setRandomizerList] = useState([]);\n\n  const init = async () => {\n    const list = await getRandomizer();\n\n    if (list) setRandomizerList(list);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <div id=\"save-list\">\n      <h1 className=\"blue-color align-center scope-title\">\n        <span className=\"yellow-color\">{\"[ \"}</span>Saved List\n        <span className=\"yellow-color\">{\" ]\"}</span>\n      </h1>\n      <div id=\"wrapper\">\n        <table>\n          <tr>\n            <th>#</th>\n            <th>Dataset</th>\n            <th>Items</th>\n            <th>Result</th>\n            <th>Created Date</th>\n          </tr>\n          {randomizerList &&\n            randomizerList.map(\n              ({ name, dataset, type, createdAt, result }, idx) => (\n                <tr>\n                  <td>{idx + 1}</td>\n                  <td>{name}</td>\n                  <td>{dataset.join(\", \")}</td>\n                  <td>\n                    {type === \"individual\" ? (\n                      <span>{result}</span>\n                    ) : (\n                      <ol>\n                        {result.map((res) => (\n                          <li>{Array.isArray(res) ? res.join(\", \") : res}</li>\n                        ))}\n                      </ol>\n                    )}\n                  </td>\n                  <td>{createdAt}</td>\n                </tr>\n              )\n            )}\n        </table>\n      </div>\n      <div>\n        <button onClick={() => exportRandomzier()}>Export</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveList;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/Randomizer.css\";\nimport { MdSave } from \"react-icons/md\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { onSubmitRandomizer, saveRandomizer } from \"../service/auth\";\nimport { formatName, randomizers } from \"../service/helper\";\n\nconst Picker = ({ name, label = \"Items\", quantityLabel, type = 1 }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const handleCategories = (value) => history.push(`/${value}`);\n\n  const [result, setResult] = useState(null);\n  const [randomizerId, setRandomizerId] = useState(null);\n  const { register, reset, handleSubmit } = useForm({\n    dataset: \"\",\n    criteriaMode: \"all\",\n  });\n\n  useEffect(() => {\n    setResult(null);\n    setRandomizerId(null);\n    reset();\n  }, [location]);\n\n  const onSubmit = async (data) => {\n    const { id, result } = await onSubmitRandomizer(data);\n\n    if (result) setResult(result);\n    if (id) setRandomizerId(id);\n  };\n\n  return (\n    <div id={name}>\n      <h1 className=\"blue-color align-center scope-title\">\n        <span className=\"yellow-color\">{\"[ \"}</span>\n        {formatName(name)}\n        <span className=\"yellow-color\">{\" ]\"}</span>\n      </h1>\n      <div className=\"flex-container\">\n        {type === 1 && (\n          <div className=\"random-result\">{result && <p>{result}</p>}</div>\n        )}\n\n        {type === 2 && (\n          <div className=\"random-result\">\n            {result?.map?.((each, i) => (\n              <table key={\"table-\" + i}>\n                <thead>\n                  <tr>\n                    <th colSpan=\"2\">Group #{i + 1}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {each &&\n                    each.map((item, j) => (\n                      <tr key={\"tr-\" + j}>\n                        <td>{item}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            ))}\n          </div>\n        )}\n\n        {type === 3 && (\n          <div className=\"random-result\">\n            <ol>\n              {result?.map?.((res) => (\n                <li>{res}</li>\n              ))}\n            </ol>\n          </div>\n        )}\n\n        <div className=\"random-setup\">\n          <div className=\"dataset\">\n            <label>Dataset</label>\n            <br />\n            <select\n              name=\"type\"\n              onChange={(e) => handleCategories(e.target.value)}\n              ref={register({\n                required: \"This is required\",\n              })}\n            >\n              {randomizers?.map(({ name: _name }) => (\n                <option key={_name} value={_name} selected={name === _name}>\n                  {formatName(_name)}\n                </option>\n              ))}\n            </select>\n          </div>\n          <form className=\"data-input\" onSubmit={handleSubmit(onSubmit)}>\n            <label>{label}</label>\n            <br />\n            <textarea\n              name=\"dataset\"\n              rows=\"10\"\n              cols=\"70\"\n              defaultValue={\n                name === \"yes-or-no\" ? [\"Yes\", \"No\"].join(\"\\n\") : \"\"\n              }\n              ref={register({\n                required: \"This is required\",\n              })}\n            />\n\n            {type !== 1 && (\n              <>\n                <label>{quantityLabel}</label>\n                <br />\n                <input\n                  type=\"number\"\n                  name=\"quantity\"\n                  min=\"1\"\n                  max=\"100\"\n                  defaultValue={1}\n                  placeholder=\"1\"\n                  ref={register({\n                    required: \"This is required\",\n                  })}\n                />\n              </>\n            )}\n\n            <div className=\"randomizer-btn\" style={{ marginTop: \"20px\" }}>\n              <button type=\"submit\">Start</button>\n            </div>\n          </form>\n\n          {randomizerId && (\n            <div className=\"save-export\">\n              <button onClick={() => saveRandomizer(randomizerId)}>\n                <MdSave className=\"save-icon\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Picker;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillCaretDown, AiOutlineClose } from \"react-icons/ai\";\nimport { MdAccountCircle, MdExpandMore } from \"react-icons/md\";\nimport { FiMenu } from \"react-icons/fi\";\n\nimport { logout } from \"../service/auth\";\nimport { AuthContext } from \"../App\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst Header = ({ user }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { dispatch } = React.useContext(AuthContext);\n  const [showMenu, setShowMenu] = useState(false);\n  const [showMenuSide, setShowMenuSide] = useState(false);\n  const drop = useRef(null);\n\n  const onLogout = async () => {\n    await logout();\n    history.push(\"/login\");\n    dispatch({ type: \"SET_USER\" });\n  };\n\n  useEffect(() => {\n    setShowMenu(false);\n    setShowMenuSide(false);\n  }, [location]);\n\n  // const handleClick = (e) => {\n  //   if (!e.target.closest(`.${drop.current.className}`) && showMenu) {\n  //     setShowMenu(false);\n  //   }\n  // };\n\n  return (\n    <>\n      <div id=\"header\">\n        <div id=\"left-navbar\" className=\"navbar blue\">\n          <Link to=\"/\" className=\"brand\">\n            KASHIO\n          </Link>\n          <div className=\"dropdown\">\n            <button type=\"button\" className=\"dropdown-btn\">\n              Calculator\n              <AiFillCaretDown className=\"caret-icon\" />\n            </button>\n            <div className=\"dropdown-content display-none\">\n              <Link to=\"/\" className=\"dropdown-link\">\n                Simple Calculator\n              </Link>\n              <hr />\n              <Link to=\"/scientific-calculator\" className=\"dropdown-link\">\n                Scientific Calculator\n              </Link>\n            </div>\n          </div>\n          <Link to=\"/unit-converter\" className=\"link\">\n            Unit Converter\n          </Link>\n          {user.isAuthenticated && (\n            <div className=\"dropdown\">\n              <button className=\"dropdown-btn\">\n                Randomizer\n                <AiFillCaretDown className=\"caret-icon\" />\n              </button>\n              <div className=\"dropdown-content display-none\">\n                <Link to=\"/team-generator\" className=\"dropdown-link\">\n                  Team Generator\n                </Link>\n                <hr />\n                <Link to=\"/name-picker\" className=\"dropdown-link\">\n                  Name Picker\n                </Link>\n                <hr />\n                <Link to=\"/yes-or-no\" className=\"dropdown-link\">\n                  Yes or No\n                </Link>\n                <hr />\n                <Link to=\"/decision-maker\" className=\"dropdown-link\">\n                  Decision Maker\n                </Link>\n                <hr />\n                <Link to=\"/random-picker\" className=\"dropdown-link\">\n                  Random Picker\n                </Link>\n                <hr />\n                <Link to=\"/custom-list\" className=\"dropdown-link\">\n                  Custom List\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n        <div id=\"right-navbar\" style={{ display: \"flex\" }}>\n          {user.isAuthenticated ? (\n            <div>\n              <button\n                type=\"button\"\n                ref={drop}\n                className=\"dropdown-btn no-pr-navbar\"\n                onClick={() => setShowMenu((showMenu) => !showMenu)}\n              >\n                <MdAccountCircle className=\"account-icon\" />\n              </button>\n              {showMenu && (\n                <div className=\"account-content\">\n                  <div className=\"dropdown-link\">{user.name}</div>\n                  <hr />\n                  <Link to=\"/saved-list\" className=\"dropdown-link\">\n                    Saved List\n                  </Link>\n                  <hr />\n                  <div onClick={onLogout} className=\"dropdown-link\">\n                    Logout\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <Link to=\"/login\" className=\"link\">\n                Login\n              </Link>\n              <Link to=\"/registration\" className=\"link no-pr-navbar\">\n                Registration\n              </Link>\n            </div>\n          )}\n\n          <button\n            type=\"button\"\n            id=\"menu-icon\"\n            className=\"dropdown-btn no-pr-navbar display-none\"\n            onClick={() => setShowMenuSide((showMenuSide) => !showMenuSide)}\n          >\n            <FiMenu className=\"menu-icon\" />\n          </button>\n        </div>\n      </div>\n\n      {showMenuSide && (\n        <div className=\"menu-side\">\n          <button\n            type=\"button\"\n            className=\"dropdown-btn\"\n            onClick={() => setShowMenuSide((showMenuSide) => !showMenuSide)}\n          >\n            <AiOutlineClose className=\"close-icon\" />\n          </button>\n          <div className=\"menu-side-content\">\n            <div className=\"menu-dropdown\">\n              <button type=\"button\" className=\"menu-side-btn\">\n                Calculator\n                <MdExpandMore className=\"expand-icon\" />\n              </button>\n              <div className=\"sub-menu display-none\">\n                <Link to=\"/\" className=\"menu-side-link no-mt-menu-side\">\n                  Simple Calculator\n                </Link>\n                <Link to=\"/scientific-calculator\" className=\"menu-side-link\">\n                  Scientific Calculator\n                </Link>\n              </div>\n            </div>\n            <hr />\n            <Link to=\"/unit-converter\" className=\"menu-side-link\">\n              Unit Converter\n            </Link>\n            <hr />\n            {user.isAuthenticated ? (\n              <div className=\"menu-dropdown\">\n                <button type=\"button\" className=\"menu-side-btn\">\n                  Randomizer\n                  <MdExpandMore className=\"expand-icon\" />\n                </button>\n                <div className=\"sub-menu display-none\">\n                  <Link\n                    to=\"/team-generator\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Team Generator\n                  </Link>\n\n                  <Link\n                    to=\"/name-picker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Name Picker\n                  </Link>\n\n                  <Link\n                    to=\"/yes-or-no\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Yes or No\n                  </Link>\n\n                  <Link\n                    to=\"/decision-maker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Decision Maker\n                  </Link>\n\n                  <Link\n                    to=\"/random-picker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Random Picker\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <>\n                <Link to=\"/login\" className=\"menu-side-link\">\n                  Login\n                </Link>\n                <hr />\n                <Link to=\"/registration\" className=\"menu-side-link\">\n                  Registration\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../css/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\">\n      <p className=\"blue-color\">\n        Created By <span className=\"yellow-color\">Kashio</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Registration from \"./Registration\";\nimport ResetPasswordLink from \"./ResetPasswordLink\";\nimport ResetPassword from \"./ResetPassword\";\nimport SimpleCalculator from \"./SimpleCalculator\";\nimport ScientificCalculator from \"./ScientificCalculator\";\nimport UnitConverter from \"./UnitConverter\";\nimport SaveList from \"./SaveList\";\nimport Picker from \"./Picker\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nimport \"../css/App.css\";\nimport { AuthContext } from \"../App\";\nimport { randomizers } from \"../service/helper\";\n\nconst Main = () => {\n  return (\n    <AuthContext.Consumer>\n      {({ state, dispatch }) => (\n        <div className=\"main-container\">\n          <Header user={state} />\n          <Switch>\n            <Route exact path=\"/\" component={SimpleCalculator} />\n            <Route path=\"/unit-converter\" component={UnitConverter} />\n            <Route\n              path=\"/scientific-calculator\"\n              component={ScientificCalculator}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/registration\" component={Registration} />\n            <Route\n              exact\n              path=\"/reset-password-link\"\n              component={ResetPasswordLink}\n            />\n            {<Route path=\"/reset-password\" component={ResetPassword} />}\n\n            {state.isAuthenticated && (\n              <Route path=\"/saved-list\" component={SaveList} />\n            )}\n\n            {state.isAuthenticated &&\n              randomizers.map((randomizer) => (\n                <Route\n                  exact\n                  key={randomizer.name}\n                  path={`/${randomizer.name}`}\n                  render={() => <Picker {...randomizer} />}\n                />\n              ))}\n            {/* <Route path=\"/team-generator\" component={TeamGenerator} />\n            <Route path=\"/name-picker\" component={NamePicker} />\n            <Route path=\"/yes-or-no\" component={YesOrNo} />\n            <Route path=\"/decision-maker\" component={DecisionMaker} />\n            <Route path=\"/random-picker\" component={RandomPicker} />\n            <Route path=\"/custom-list\" component={CustomList} />{\" \"} */}\n          </Switch>\n          <Footer />\n        </div>\n      )}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { getUser } from \"./service/auth\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const AuthContext = React.createContext();\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  role: null,\n  id: null,\n  email: null,\n\n  alert: {\n    show: false,\n    type: \"error\",\n    msg: \"\",\n  },\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: action.payload?.role === \"user\",\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useEffect(async () => {\n    const user = await getUser();\n    if (user) dispatch({ type: \"SET_USER\", payload: user });\n  }, []);\n\n  return (\n    <Router>\n      <AuthContext.Provider\n        value={{\n          state,\n          dispatch,\n        }}\n      >\n        <ToastContainer />\n        <Main />\n      </AuthContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// reportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}