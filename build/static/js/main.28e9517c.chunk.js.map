{"version":3,"sources":["components/ScientificCalculator.js","service/helper.js","service/auth.js","components/Login.js","components/Registration.js","components/ResetPasswordLink.js","components/ResetPassword.js","components/SimpleCalculator.js","components/UnitConverter.js","components/SaveList.js","components/Picker.js","components/Header.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["AutoScalingText","state","scale","this","node","actualScale","parentNode","offsetWidth","setState","className","style","transform","ref","props","children","Component","CalculatorDisplay","value","language","navigator","isNumeric","forEach","key","includes","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","endsWith","CalculatorKey","onPress","onPoint","CalculatorOperations","prevValue","nextValue","nthRoot","Math","pow","xPowY","yPowX","logY","log","ScientificCalculator","displayValue","operator","waitingForOperand","done","shift","degree","ee","isMemoryActive","isBracketsActive","isLeftBracket","isRightBracket","isDigit","isOperator","memory","memory_plus","memory_minus","memory_recall","handleShiftClick","handleDegreeClick","handleKeyDown","event","test","preventDefault","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","substring","length","newValue","String","fixedDigits","replace","toFixed","digit","hasDot","integer","split","PI","exp","nextOperator","isbracketsActive","eval","inputValue","currentValue","toPrecision","result","random","sin","cos","tan","sinh","cosh","tanh","asin","acos","atan","asinh","acosh","atanh","sqrt","cbrt","document","addEventListener","removeEventListener","prevState","temp","toString","indexOf","i","resultNegative","j","log10","log2","clearText","id","leftBracket","rightBracket","memoryClear","memoryPlus","memoryMinus","memoryRecall","toggleSign","pow2","pow3","exponential","twoPowX","tenPowX","multiplicativeInverse","factorial","sinInverse","cosInverse","tanInverse","sinhInverse","coshInverse","tanhInverse","rand","formatName","str","map","s","charAt","toUpperCase","slice","join","randomizers","name","type","label","quantityLabel","axios","defaults","baseURL","headers","common","localStorage","getItem","handleError","e","defaultMessage","response","data","message","code","error","console","toast","handleSuccess","success","hasError","res","tryCatch","cb","then","catch","setToken","users","tokens","setItem","access","token","refresh","getUser","a","get","login","form","post","signup","logout","refreshToken","clear","forgotPassword","email","resetPassword","query","password","randomize","getRandomizerType","onSubmitRandomizer","randomizer","dataset","quantity","payload","filter","ds","saveRandomizer","randomizerId","patch","getRandomizer","results","sort","b","createdAt","Date","exportRandomzier","responseType","fileURL","window","URL","createObjectURL","Blob","fileLink","createElement","href","setAttribute","body","appendChild","click","Login","history","useHistory","dispatch","React","useContext","AuthContext","useForm","criteriaMode","register","errors","handleSubmit","onSubmit","user","push","placeholder","required","pattern","render","messages","Object","entries","to","Registration","watch","useRef","current","confirmPassword","minLength","maxLength","validate","ResetPasswordLink","ResetPassword","location","search","match","SimpleCalculator","displayValue1","displayValue2","selectedType","unit1","unit2","types","area","temperature","volume","mass","speed","time","changeSelectOptionHandler","bind","target","options","el","onClick","onChange","class","displayTmp","unitTmp","converted","SaveList","useState","randomizerList","setRandomizerList","useEffect","list","idx","Picker","setResult","setRandomizerId","reset","each","colSpan","item","_name","selected","rows","cols","min","max","defaultValue","marginTop","Header","useLocation","showMenu","setShowMenu","showMenuSide","setShowMenuSide","drop","onLogout","isAuthenticated","display","Footer","Main","Consumer","exact","path","component","UnitConverter","createContext","initialState","role","alert","show","msg","reducer","action","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28e9517c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/ScientificCalculator.css\";\nimport PointTarget from \"react-point\";\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1,\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale}, ${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n    const language = navigator.language || \"en-US\";\n    const escapedKeys = [\" e \", \"E\", \"*\", \"(\", \")\", \"r\", \"o\"];\n    let isNumeric = true;\n\n    escapedKeys.forEach((key) => {\n      if (value.includes(key)) isNumeric = false;\n    });\n\n    const parsedValue = isNumeric ? parseFloat(value) : value;\n\n    let formattedValue = parsedValue.toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 10,\n    });\n\n    if (value.endsWith(\".\")) formattedValue += \".\";\n\n    return (\n      <div {...props}>\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue,\n  nthRoot: (prevValue, nextValue) => Math.pow(nextValue, 1 / prevValue),\n  xPowY: (prevValue, nextValue) => Math.pow(prevValue, nextValue),\n  yPowX: (prevValue, nextValue) => Math.pow(nextValue, prevValue),\n  logY: (prevValue, nextValue) => Math.log(nextValue) / Math.log(prevValue),\n};\n\nclass ScientificCalculator extends Component {\n  state = {\n    value: null,\n    displayValue: \"0\",\n    operator: null,\n    waitingForOperand: false,\n    done: false,\n    shift: false,\n    degree: false,\n    ee: false,\n    isMemoryActive: false,\n    isBracketsActive: false,\n    isLeftBracket: false,\n    isRightBracket: false,\n    isDigit: false,\n    isOperator: false,\n    memory: {\n      memory_plus: 0,\n      memory_minus: 0,\n      memory_recall: null,\n    },\n  };\n\n  handleShiftClick = () => {\n    this.setState((state) => {\n      return {\n        shift: !state.shift,\n      };\n    });\n  };\n\n  handleDegreeClick = () => {\n    this.setState((state) => {\n      return {\n        degree: !state.degree,\n      };\n    });\n  };\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      done: false,\n      ee: false,\n      isMemoryActive: false,\n      isBracketsActive: false,\n      isRightBracket: false,\n      isDigit: false,\n      isOperator: false,\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\",\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\",\n    });\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    this.setState({\n      displayValue: String(newValue),\n    });\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0) return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2)),\n      done: true,\n    });\n  }\n\n  inputDot() {\n    const {\n      displayValue,\n      waitingForOperand,\n      isRightBracket,\n      done,\n    } = this.state;\n\n    if (done === true) {\n      this.clearAll();\n      this.setState({ displayValue: \"0.\" });\n    } else if (isRightBracket === true) {\n      this.setState({\n        displayValue: `${displayValue}*0.`,\n        isRightBracket: false,\n      });\n    } else if (waitingForOperand === true) {\n      this.setState({ displayValue: \"0.\", waitingForOperand: false });\n    } else if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + \".\",\n        waitingForOperand: false,\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const {\n      displayValue,\n      waitingForOperand,\n      done,\n      isRightBracket,\n    } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false,\n        isDigit: true,\n      });\n    } else {\n      const hasDot = displayValue.includes(\".\");\n      const integer = displayValue.split(\".\")[0];\n\n      if (!hasDot && integer.length >= 10) return;\n\n      if (digit === Math.PI || digit === Math.exp(1)) {\n        this.clearDisplay();\n        return this.setState({\n          displayValue: String(digit),\n          isDigit: true,\n          isOperator: false,\n        });\n      }\n\n      if (done === true) {\n        this.clearAll();\n        this.setState({\n          displayValue: String(digit),\n          isDigit: true,\n          isOperator: false,\n        });\n      } else if (isRightBracket === true) {\n        this.setState({\n          displayValue: displayValue + \"*\" + digit,\n          isRightBracket: false,\n          isDigit: true,\n          isOperator: false,\n        });\n      } else {\n        this.setState({\n          displayValue:\n            displayValue === \"0\" ? String(digit) : displayValue + digit,\n          isDigit: true,\n          isOperator: false,\n        });\n      }\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator,\n      waitingForOperand,\n      isMemoryActive,\n      isbracketsActive,\n      isRightBracket,\n      isLeftBracket,\n      isDigit,\n      isOperator,\n      ee,\n    } = this.state;\n\n    // left brackets with *( and (\n    this.setState({ isOperator: true, isDigit: false });\n\n    if (\n      isRightBracket === false &&\n      nextOperator === \"=\" &&\n      isbracketsActive === true\n    ) {\n      return this.setState({\n        displayValue: \"Error\",\n        isbracketsActive: false,\n        done: true,\n      });\n    }\n\n    if (isRightBracket === true) {\n      this.setState({ isRightBracket: false });\n    }\n\n    if (isbracketsActive === true && nextOperator === \"=\") {\n      this.setState({\n        displayValue: String(eval(displayValue)),\n        isbracketsActive: false,\n      });\n    } else if (isbracketsActive === true) {\n      if (isLeftBracket === true && isDigit === false && isOperator === true) {\n        if (nextOperator === \"/\" || nextOperator === \"*\") {\n          this.setState({ displayValue });\n        } else {\n          this.setState({\n            displayValue: displayValue + nextOperator,\n            isOperator: false,\n          });\n        }\n      }\n    } else {\n      const inputValue = parseFloat(displayValue);\n\n      // ee calculation\n      if (ee === true) {\n        const currentValue = displayValue.replace(/\\s/g, \"\");\n        return this.setState({\n          displayValue: parseFloat(currentValue).toPrecision(),\n          done: true,\n          ee: false,\n        });\n      }\n\n      if (value == null) {\n        this.setState({\n          value: inputValue,\n        });\n      } else if (\n        (operator && waitingForOperand === false) ||\n        (operator && isMemoryActive === true)\n      ) {\n        const currentValue = parseFloat(value) || 0;\n        const newValue = CalculatorOperations[operator](\n          currentValue,\n          inputValue\n        );\n\n        this.setState({\n          value: newValue,\n          displayValue: String(newValue),\n          isMemoryActive: false,\n          isRightBracket: false,\n        });\n      }\n\n      this.setState({\n        waitingForOperand: true,\n        operator: nextOperator,\n      });\n    }\n  }\n\n  leftBracket() {\n    const { displayValue, isDigit, isOperator } = this.state;\n\n    this.setState({\n      displayValue:\n        displayValue === \"0\" || displayValue === \"Error\"\n          ? \"(\"\n          : isDigit === true && isOperator === false\n          ? displayValue + \"*(\"\n          : displayValue + \"(\",\n      isbracketsActive: true,\n      isRightBracket: false,\n      isLeftBracket: true,\n      isDigit: false,\n    });\n  }\n\n  rightBracket() {\n    const { displayValue, isLeftBracket, isDigit } = this.state;\n\n    if (isLeftBracket && isDigit) {\n      this.setState({\n        displayValue: displayValue === \"0\" ? \")\" : displayValue + \")\",\n        isbracketsActive: true,\n        isRightBracket: true,\n      });\n    }\n  }\n\n  multiplicativeInverse() {\n    const { displayValue } = this.state;\n\n    if (displayValue === \"0\") {\n      return this.setState({ displayValue: \"NaN\", done: true });\n    }\n\n    const result = String(1 / displayValue);\n    this.setState({ displayValue: result, done: true });\n  }\n\n  exponential() {\n    const { displayValue } = this.state;\n\n    if (displayValue === \"0\") {\n      return this.setState({ displayValue: \"1\" });\n    }\n\n    const result = String(Math.exp(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  rand() {\n    this.setState({ displayValue: String(Math.random()) });\n  }\n\n  sin() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.sin(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        Math.sin((parseFloat(displayValue) * Math.PI) / 180)\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  cos() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.cos(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(Math.cos((parseInt(displayValue) * Math.PI) / 180));\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  tan() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.tan(displayValue)),\n        done: true,\n      });\n    } else {\n      if (displayValue === \"90\" || displayValue === \"270\") {\n        this.setState({ displayValue: \"NaN\", done: true });\n      } else {\n        const result = String(\n          Math.tan((parseFloat(displayValue) * Math.PI) / 180)\n        );\n        this.setState({ displayValue: result, done: true });\n      }\n    }\n  }\n\n  sinh() {\n    const { displayValue } = this.state;\n    const result = String(Math.sinh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  cosh() {\n    const { displayValue } = this.state;\n    const result = String(Math.cosh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  tanh() {\n    const { displayValue } = this.state;\n    const result = String(Math.tanh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  sinInverse() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.asin(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.asin(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  cosInverse() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.acos(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.acos(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  tanInverse() {\n    const { displayValue, degree } = this.state;\n\n    if (degree === false) {\n      this.setState({\n        displayValue: String(Math.atan(displayValue)),\n        done: true,\n      });\n    } else {\n      const result = String(\n        (Math.atan(parseFloat(displayValue)) * 180) / Math.PI\n      );\n      this.setState({ displayValue: result, done: true });\n    }\n  }\n\n  sinhInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.asinh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  coshInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.acosh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  tanhInverse() {\n    const { displayValue } = this.state;\n    const result = String(Math.atanh(parseFloat(displayValue)));\n    this.setState({ displayValue: result, done: true });\n  }\n\n  sqrt() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.sqrt(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  cbrt() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.cbrt(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === \"Enter\") key = \"=\";\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key);\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"%\") {\n      event.preventDefault();\n      this.inputPercent();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n    } else if (key === \"Clear\") {\n      event.preventDefault();\n\n      if (this.state.displayValue !== \"0\") {\n        this.clearDisplay();\n      } else {\n        this.clearAll();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  memoryClear() {\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: 0,\n        memory_minus: 0,\n        memory_recall: null,\n      },\n      isMemoryActive: false,\n    }));\n  }\n\n  memoryPlus() {\n    let temp =\n      parseFloat(this.state.displayValue) + this.state.memory.memory_plus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: temp,\n      },\n    }));\n  }\n\n  memoryMinus() {\n    let temp =\n      parseInt(this.state.displayValue) + this.state.memory.memory_minus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_minus: temp,\n      },\n    }));\n  }\n\n  memoryRecall() {\n    const { displayValue } = this.state;\n    let temp = (\n      this.state.memory.memory_plus - this.state.memory.memory_minus\n    ).toString();\n\n    if (displayValue !== \"0\") {\n      this.setState({\n        displayValue: temp,\n        isMemoryActive: true,\n      });\n    } else {\n      this.setState({\n        displayValue: temp,\n        isMemoryActive: false,\n        done: true,\n      });\n    }\n  }\n\n  factorial() {\n    const { displayValue } = this.state;\n\n    // if there is a dot, return NaN\n    if (displayValue.indexOf(\".\") !== -1) {\n      return this.setState({ displayValue: \"NaN\", done: true });\n    }\n\n    if (displayValue === \"1\" || displayValue === \"-1\") {\n      return this.setState({ displayValue });\n    } else if (parseInt(displayValue) > 1) {\n      var result = 1;\n\n      for (var i = 1; i <= parseInt(displayValue); ++i) {\n        result *= i;\n      }\n\n      return this.setState({ displayValue: String(result), done: true });\n    } else if (parseInt(displayValue) < -1) {\n      var resultNegative = 1;\n\n      for (var j = -1; j >= parseInt(displayValue); j--) {\n        resultNegative *= j;\n      }\n\n      return this.setState({\n        displayValue: String(resultNegative),\n        done: true,\n      });\n    }\n  }\n\n  log10() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"NaN\", done: true });\n    }\n\n    this.setState({\n      displayValue: String(Math.log10(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  log2() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"NaN\", done: true });\n    }\n\n    this.setState({\n      displayValue: String(Math.log2(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  log() {\n    const { displayValue } = this.state;\n\n    if (parseInt(displayValue) <= 0) {\n      return this.setState({ displayValue: \"NaN\", done: true });\n    }\n\n    this.setState({\n      displayValue: String(Math.log(parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  pow2() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(parseFloat(displayValue), 2)),\n      done: true,\n    });\n  }\n\n  pow3() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(parseFloat(displayValue), 3)),\n      done: true,\n    });\n  }\n\n  tenPowX() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(10, parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  twoPowX() {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: String(Math.pow(2, parseFloat(displayValue))),\n      done: true,\n    });\n  }\n\n  ee() {\n    const { displayValue, done, ee } = this.state;\n\n    if (done === false) {\n      if (ee === true) {\n        this.setState({ displayValue });\n      } else {\n        this.setState({ displayValue: displayValue + \" e \", ee: true });\n      }\n    }\n  }\n\n  render() {\n    const { displayValue } = this.state;\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    return (\n      <div id=\"scientific-calculator\">\n        <h1 className=\"blue-color align-center scope-title\">\n          <span className=\"yellow-color\">{\"[ \"}</span>Scientific Calculator\n          <span className=\"yellow-color\">{\" ]\"}</span>\n        </h1>\n        <div className=\"calculator-body\">\n          <div>\n            <div className=\"result\">\n              <p>\n                <CalculatorDisplay value={displayValue} />\n              </p>\n            </div>\n          </div>\n          <div className=\"button\">\n            <div className=\"align-center\">\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.leftBracket()}\n              >\n                {\"(\"}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.rightBracket()}\n              >\n                {\")\"}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryClear()}\n              >\n                MC\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryPlus()}\n              >\n                M+\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryMinus()}\n              >\n                M-\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.memoryRecall()}\n              >\n                MR\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() =>\n                  clearDisplay ? this.clearDisplay() : this.clearAll()\n                }\n              >\n                {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.toggleSign()}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.inputPercent()}\n              >\n                %\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"/\")}\n              >\n                ÷\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={this.handleShiftClick}\n                >\n                  1\n                  <sup>\n                    <small>st</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={this.handleShiftClick}\n                >\n                  2\n                  <sup>\n                    <small>nd</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.pow2()}\n              >\n                x\n                <sup>\n                  <small>2</small>\n                </sup>\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.pow3()}\n              >\n                x\n                <sup>\n                  <small>3</small>\n                </sup>\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.performOperation(\"xPowY\")}\n              >\n                x\n                <sup>\n                  <small>y</small>\n                </sup>\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.exponential()}\n                >\n                  e\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={() => this.performOperation(\"yPowX\")}\n                >\n                  y\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.tenPowX()}\n                >\n                  10\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY-3\"\n                  onPress={() => this.twoPowX()}\n                >\n                  2\n                  <sup>\n                    <small>x</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(7)}\n              >\n                7\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(8)}\n              >\n                8\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(9)}\n              >\n                9\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"*\")}\n              >\n                ×\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-1\"\n                onPress={() => this.multiplicativeInverse()}\n              >\n                1/x\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.sqrt()}\n              >\n                <sup>\n                  <small>2</small>\n                </sup>\n                √\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.cbrt()}\n              >\n                <sup>\n                  <small>3</small>\n                </sup>\n                √\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background translateY-3\"\n                onPress={() => this.performOperation(\"nthRoot\")}\n              >\n                <sup>\n                  <small>x</small>\n                </sup>\n                √\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-1\"\n                  onPress={() => this.log()}\n                >\n                  ln\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY--1\"\n                  onPress={() => this.performOperation(\"logY\")}\n                >\n                  log\n                  <sub>\n                    <small>y</small>\n                  </sub>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY--1\"\n                  onPress={() => this.log10()}\n                >\n                  log\n                  <sub>\n                    <small>10</small>\n                  </sub>\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background translateY--1\"\n                  onPress={() => this.log2()}\n                >\n                  log\n                  <sub>\n                    <small>2</small>\n                  </sub>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(4)}\n              >\n                4\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(5)}\n              >\n                5\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"number-btn\"\n                onPress={() => this.inputDigit(6)}\n              >\n                6\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator\"\n                onPress={() => this.performOperation(\"-\")}\n              >\n                −\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.factorial()}\n              >\n                x!\n              </CalculatorKey>\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.sin()}\n                >\n                  sin\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.sinInverse()}\n                >\n                  sin\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.cos()}\n                >\n                  cos\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.cosInverse()}\n                >\n                  cos\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background\"\n                  onPress={() => this.tan()}\n                >\n                  tan\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.tanInverse()}\n                >\n                  tan\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.inputDigit(Math.exp(1))}\n              >\n                e\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (this.state.shift && \"translateY--3\")\n                }\n                onPress={() => this.ee()}\n              >\n                EE\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(1)}\n              >\n                1\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(2)}\n              >\n                2\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(3)}\n              >\n                3\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"operator \" +\n                  (!this.state.shift ? \"translateY-1\" : \"translateY--2\")\n                }\n                onPress={() => this.performOperation(\"+\")}\n              >\n                +\n              </CalculatorKey>\n              {!this.state.degree ? (\n                <CalculatorKey\n                  className={\n                    \"blue-light-background \" +\n                    (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                  }\n                  onPress={this.handleDegreeClick}\n                >\n                  Rad\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className={\n                    \"dark-blue-background \" +\n                    (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                  }\n                  onPress={this.handleDegreeClick}\n                >\n                  Deg\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.sinh()}\n                >\n                  sinh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.sinhInverse()}\n                >\n                  sinh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.cosh()}\n                >\n                  cosh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.coshInverse()}\n                >\n                  cosh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              {!this.state.shift ? (\n                <CalculatorKey\n                  className=\"blue-light-background translateY-3\"\n                  onPress={() => this.tanh()}\n                >\n                  tanh\n                </CalculatorKey>\n              ) : (\n                <CalculatorKey\n                  className=\"dark-blue-background\"\n                  onPress={() => this.tanhInverse()}\n                >\n                  tanh\n                  <sup>\n                    <small>-1</small>\n                  </sup>\n                </CalculatorKey>\n              )}\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(Math.PI)}\n              >\n                π\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"blue-light-background \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.rand()}\n              >\n                Rand\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"number-btn zero-num \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDigit(0)}\n              >\n                0\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"dot-btn \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.inputDot()}\n              >\n                .\n              </CalculatorKey>\n              <CalculatorKey\n                className={\n                  \"operator \" +\n                  (!this.state.shift ? \"translateY-3\" : \"translateY--2\")\n                }\n                onPress={() => this.performOperation(\"=\")}\n              >\n                =\n              </CalculatorKey>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScientificCalculator;\n","export const formatName = (str, key = \"-\") => {\n  if (typeof str !== \"string\") return str;\n\n  return str\n    .split(key)\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(\" \");\n};\n\nexport const randomizers = [\n  {\n    name: \"team-generator\",\n    type: 2,\n    label: \"Dataset\",\n    quantityLabel: \"Group\",\n  },\n  {\n    name: \"custom-list\",\n    type: 3,\n    label: \"Dataset\",\n    quantityLabel: \"Quantity\",\n  },\n  { name: \"name-picker\" },\n  { name: \"yes-or-no\" },\n  { name: \"decision-maker\" },\n  { name: \"random-picker\" },\n];\n","import axios from \"axios\";\nimport { formatName } from \"../service/helper\";\nimport { toast } from \"react-toastify\";\n\nconst baseUrl = \"https://api.piseth.me/v1\";\n\naxios.defaults.baseURL = baseUrl;\naxios.defaults.headers.common[\"Authorization\"] =\n  \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\");\n\nconst handleError = (e, defaultMessage) => {\n  const { message, code } = e.response?.data;\n  const error = defaultMessage ?? `Error ${code}: ${message}`;\n  console.error(e.response);\n  toast.error(error);\n};\n\nconst handleSuccess = (defaultMessage) => {\n  toast.success(defaultMessage);\n};\n\nconst hasError = (res) => {\n  return res.error;\n};\n\nconst tryCatch = (cb) => {\n  return cb\n    .then(({ data }) => ({ ...data, error: false }))\n    .catch((e) => {\n      handleError(e);\n      return { error: true };\n    });\n};\n\nconst setToken = ({ users, tokens }) => {\n  localStorage.setItem(\"ACCESS_TOKEN\", tokens.access.token);\n  localStorage.setItem(\"REFRESH_TOKEN\", tokens.refresh.token);\n\n  axios.defaults.headers.common[\"Authorization\"] =\n    \"Bearer \" + tokens.access.token;\n};\n\nexport const getUser = async () => {\n  const token = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (!token) return;\n\n  const res = await tryCatch(axios.get(\"/users/me\"));\n  if (!hasError(res)) return res;\n};\n\nexport const login = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/login\", form));\n\n  if (!hasError(res)) {\n    setToken(res);\n    handleSuccess(\"Welcome back!\");\n  }\n\n  return res;\n};\n\nexport const signup = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/register\", form));\n  if (!hasError(res)) setToken(res);\n};\n\nexport const logout = async (form) => {\n  const res = await tryCatch(\n    axios.post(\"/auth/logout\", {\n      refreshToken: localStorage.getItem(\"REFRESH_TOKEN\"),\n    })\n  );\n\n  localStorage.clear();\n};\n\nexport const forgotPassword = async (form) => {\n  const res = await tryCatch(axios.post(\"/auth/forgot-password\", form));\n  if (!hasError(res))\n    handleSuccess(\"Reset Passowrd Link has been sent to \" + form.email);\n};\n\nexport const resetPassword = async ({ query, password }) => {\n  const res = await tryCatch(\n    axios.post(\"/auth/reset-password\" + query, { password })\n  );\n  if (!hasError(res)) handleSuccess(\"Password reset Successfully\");\n\n  return res;\n};\n\nexport const randomize = async (form) => {\n  const res = await tryCatch(axios.post(\"/randomizer\", form));\n  if (!hasError(res)) return res;\n\n  return {};\n};\n\nconst getRandomizerType = (type) => {\n  if (type === \"team-generator\") return \"group\";\n  if (type === \"custom-list\") return \"custom\";\n\n  return \"individual\";\n};\n\nexport const onSubmitRandomizer = async (randomizer) => {\n  const { dataset, type, quantity } = randomizer;\n\n  const payload = {\n    type: getRandomizerType(type),\n    dataset: dataset.split(\"\\n\").filter((ds) => ds !== \"\"),\n    quantity,\n    name: type,\n  };\n\n  return await randomize(payload);\n};\n\nexport const saveRandomizer = async (randomizerId) => {\n  const res = await tryCatch(axios.patch(`/randomizer/${randomizerId}`));\n\n  if (!hasError(res)) handleSuccess(\"Randomizer Saved Successfully.\");\n};\n\nexport const getRandomizer = async () => {\n  const res = await tryCatch(axios.get(\"/randomizer/me\"));\n\n  if (!hasError(res))\n    return res?.results\n      ?.sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1))\n      .map((res) => ({\n        ...res,\n        name: formatName(res.name),\n        createdAt: new Date(res.createdAt).toLocaleString(),\n      }));\n};\n\nexport const exportRandomzier = async () => {\n  axios\n    .get(`/randomizer/me/export `, {\n      responseType: \"blob\",\n    })\n    .then((response) => {\n      var fileURL = window.URL.createObjectURL(new Blob([response.data]));\n      var fileLink = document.createElement(\"a\");\n\n      fileLink.href = fileURL;\n      fileLink.setAttribute(\"download\", \"random.xls\");\n      document.body.appendChild(fileLink);\n\n      fileLink.click();\n    })\n    .catch(handleError);\n};\n","import React from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { Link } from \"react-router-dom\";\nimport { MdEmail, MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { login } from \"../service/auth\";\n\nimport { AuthContext } from \"../App\";\n\nconst Login = () => {\n  const history = useHistory();\n\n  const { dispatch } = React.useContext(AuthContext);\n  const { register, errors, handleSubmit } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = async (data) => {\n    const res = await login(data);\n\n    if (res.error)\n      return dispatch({\n        type: \"SET_USER\",\n      });\n\n    dispatch({\n      type: \"SET_USER\",\n      payload: res?.user,\n    });\n    return history.push(\"/team-generator\");\n  };\n\n  return (\n    <div id=\"login\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Login</h1>\n      <p className=\"yellow-color\">Let's get started</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: \"This is required\",\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"flex-container\">\n          <form>\n            {/* <input type=\"checkbox\" name=\"rememberMe\" />\n            <label value=\"rememberMe\">Remember Me</label> */}\n          </form>\n          <Link to=\"/reset-password-link\" className=\"forgot-pwd\">\n            Forgot Password?\n          </Link>\n        </div>\n        <p className=\"suggestion blue-color mt-50\">\n          Don't have any account yet\n          <span>\n            &#63;{\" \"}\n            <Link to=\"/registration\" className=\"yellow-color\">\n              Register here\n            </Link>\n          </span>\n        </p>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useRef } from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { Link } from \"react-router-dom\";\nimport { RiUser3Fill } from \"react-icons/ri\";\nimport { MdEmail, MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { signup } from \"../service/auth\";\n\nconst Registration = () => {\n  const { register, errors, handleSubmit, watch } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = (data) => {\n    const { name, email, password, confirmPassword } = data;\n    if (password && password !== confirmPassword) return;\n\n    return signup({ name, email, password });\n  };\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div id=\"registration\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Registration</h1>\n      <p className=\"yellow-color\">Create your free account</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Username\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^[a-zA-Z0-9 ]+$/,\n                message: \"Letters and numbers are allowed only\",\n              },\n            })}\n          />\n          <RiUser3Fill className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"username\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: \"This is required\",\n              minLength: {\n                value: 6,\n                message: \"Password must have at least 6 characters\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Password must have less than 20 characters\",\n              },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            ref={register({\n              required: \"This is required\",\n              validate: (value) => {\n                return (\n                  value === password.current || \"The password does not match\"\n                );\n              },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"confirmPassword\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <p className=\"suggestion blue-color mt-50\">\n          Already have an account?{\" \"}\n          <span>\n            <Link to=\"/login\" className=\"yellow-color\">\n              Login\n            </Link>\n          </span>\n        </p>\n        <div>\n          <button type=\"submit\">Register</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n","import React from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { MdEmail } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { forgotPassword } from \"../service/auth\";\n\nconst ResetPasswordLink = () => {\n  const { register, errors, handleSubmit } = useForm({\n    criteriaMode: \"all\",\n  });\n  const onSubmit = (data) => forgotPassword(data);\n\n  return (\n    <div id=\"reset-password-link\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Reset Password</h1>\n      <p className=\"yellow-color\">Reset your password here</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: \"This is required\",\n              pattern: {\n                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                message: \"Invalid Email Address\",\n              },\n            })}\n          />\n          <MdEmail className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"mt-50\">\n          <button type=\"submit\">Send Password Reset Link</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordLink;\n","import React, { useRef } from \"react\";\nimport \"../css/UserAdmisson.css\";\nimport { MdEmail, MdLock } from \"react-icons/md\";\nimport { BiErrorCircle } from \"react-icons/bi\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { resetPassword } from \"../service/auth\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst ResetPassword = (props) => {\n  const history = useHistory();\n  const { register, errors, handleSubmit, watch } = useForm({\n    criteriaMode: \"all\",\n  });\n\n  const onSubmit = async (data) => {\n    const query = props.location.search;\n    const { password, confirmPassword } = data;\n    if (password && password !== confirmPassword) return;\n    const res = await resetPassword({ query, password });\n    if (!res.error) history.push(\"/login\");\n  };\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div id=\"reset-password\" className=\"user-admisson\">\n      <h1 className=\"form-title blue-color\">Reset Password</h1>\n      <p className=\"yellow-color\">Reset your password here</p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"New Password\"\n            ref={register({\n              required: \"This is required\",\n              minLength: {\n                value: 6,\n                message: \"Password must have at least 6 characters\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Password must have less than 20 characters\",\n              },\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm New Password\"\n            ref={register({\n              required: \"This is required\",\n              validate: (value) =>\n                value === password.current || \"The password does not match\",\n            })}\n          />\n          <MdLock className=\"input-icon\" />\n          <ErrorMessage\n            errors={errors}\n            name=\"confirmPassword\"\n            render={({ messages }) =>\n              messages &&\n              Object.entries(messages).map(([type, message]) => (\n                <div className=\"error-container\">\n                  <BiErrorCircle className=\"error-icon\" />\n                  <p key={type} className=\"error-message\">\n                    {message}\n                  </p>\n                </div>\n              ))\n            }\n          />\n        </div>\n        <div className=\"mt-50\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport \"../css/SimpleCalculator.css\";\nimport PointTarget from \"react-point\";\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1,\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n    const language = navigator.language || \"en-US\";\n\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6,\n    });\n\n    // Add back missing .0 in e.g. 12.0\n    const match = value.match(/\\.\\d*?(0*)$/);\n\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue,\n};\n\nclass SimpleCalculator extends Component {\n  state = {\n    value: null,\n    displayValue: \"0\",\n    operator: null,\n    waitingForOperand: false,\n    done: false,\n    isMemoryActive: false,\n    memory: {\n      memory_plus: 0,\n      memory_minus: 0,\n      memory_recall: null,\n    },\n  };\n\n  memoryClear() {\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: 0,\n        memory_minus: 0,\n        memory_recall: null,\n      },\n      isMemoryActive: false,\n    }));\n  }\n\n  memoryPlus() {\n    // let temp= this.state.memory.memory_plus\n    let temp =\n      parseFloat(this.state.displayValue) + this.state.memory.memory_plus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_plus: temp,\n      },\n    }));\n\n    console.log(this.state.memory.memory_plus);\n  }\n\n  memoryMinus() {\n    let temp =\n      parseInt(this.state.displayValue) + this.state.memory.memory_minus;\n    this.setState((prevState) => ({\n      memory: {\n        ...prevState.memory,\n        memory_minus: temp,\n      },\n    }));\n  }\n\n  memoryRecall() {\n    const { displayValue } = this.state;\n    let temp = (\n      this.state.memory.memory_plus - this.state.memory.memory_minus\n    ).toString();\n\n    if (displayValue !== \"0\") {\n      this.setState({\n        displayValue: temp,\n        isMemoryActive: true,\n      });\n    } else {\n      this.setState({\n        displayValue: temp,\n        isMemoryActive: false,\n        done: true,\n      });\n    }\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      done: false,\n      isMemoryActive: false,\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\",\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\",\n    });\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    this.setState({\n      displayValue: String(newValue),\n    });\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0) return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2)),\n      done: true,\n    });\n  }\n\n  inputDot() {\n    const { displayValue, waitingForOperand } = this.state;\n\n    if (waitingForOperand === true) {\n      this.setState({ displayValue: \"0.\", waitingForOperand: false });\n    } else if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + \".\",\n        waitingForOperand: false,\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const { displayValue, waitingForOperand, done } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false,\n      });\n    } else {\n      const hasDot = displayValue.includes(\".\");\n      const integer = displayValue.split(\".\")[0];\n\n      if (!hasDot && integer.length >= 10) return;\n\n      if (done === true) {\n        this.clearAll();\n        this.setState({ displayValue: String(digit) });\n      } else {\n        this.setState({\n          displayValue:\n            displayValue === \"0\" ? String(digit) : displayValue + digit,\n        });\n      }\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator,\n      waitingForOperand,\n      isMemoryActive,\n    } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue,\n      });\n    } else if (\n      (operator && waitingForOperand === false) ||\n      (operator && isMemoryActive === true)\n    ) {\n      const currentValue = parseFloat(value) || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue),\n        isMemoryActive: false,\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === \"Enter\") key = \"=\";\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key);\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"%\") {\n      event.preventDefault();\n      this.inputPercent();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n\n      if (this.state.displayValue !== \"0\") {\n        this.clearDisplay();\n      } else {\n        this.clearAll();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const { displayValue } = this.state;\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    return (\n      <div id=\"simple-calculator\">\n        <h1 className=\"blue-color align-center scope-title\">\n          <span className=\"yellow-color\">{\"[ \"}</span>Simple Calculator\n          <span className=\"yellow-color\">{\" ]\"}</span>\n        </h1>\n        <div className=\"calculator-body\">\n          <div className=\"resultContainer\">\n            <div className=\"result\">\n              <p>\n                <CalculatorDisplay value={displayValue} />\n              </p>\n            </div>\n          </div>\n          <div className=\"button\">\n            <div className=\"align-center\">\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryClear()}\n              >\n                MC\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryPlus()}\n              >\n                M+\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryMinus()}\n              >\n                M-\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"memory blue-light-background\"\n                onPress={() => this.memoryRecall()}\n              >\n                MR\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background clear-btn\"\n                onPress={() =>\n                  clearDisplay ? this.clearDisplay() : this.clearAll()\n                }\n              >\n                {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.toggleSign()}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-light-background\"\n                onPress={() => this.inputPercent()}\n              >\n                %\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"/\")}\n              >\n                ÷\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(7)}\n              >\n                7\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(8)}\n              >\n                8\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(9)}\n              >\n                9\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"*\")}\n              >\n                ×\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(4)}\n              >\n                4\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(5)}\n              >\n                5\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(6)}\n              >\n                6\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"-\")}\n              >\n                −\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(1)}\n              >\n                1\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(2)}\n              >\n                2\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDigit(3)}\n              >\n                3\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"+\")}\n              >\n                +\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"zero-num blue-background\"\n                onPress={() => this.inputDigit(0)}\n              >\n                0\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"blue-background\"\n                onPress={() => this.inputDot()}\n              >\n                .\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"operator black-color yellow-background\"\n                onPress={() => this.performOperation(\"=\")}\n              >\n                =\n              </CalculatorKey>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SimpleCalculator;\n","import React, { Component } from 'react';\nimport '../css/UnitConverter.css';\nimport PointTarget from 'react-point';\nimport axios from 'axios';\nimport { HiSwitchVertical } from 'react-icons/hi';\nimport { IoMdReturnLeft } from 'react-icons/io';\n\nclass AutoScalingText extends Component {\n    state = {\n        scale: 1,\n    };\n\n    componentDidUpdate() {\n        const { scale } = this.state;\n        const node = this.node;\n        const parentNode = node.parentNode;\n        const availableWidth = parentNode.offsetWidth;\n        const actualWidth = node.offsetWidth;\n        const actualScale = availableWidth / actualWidth;\n\n        if (scale === actualScale) return;\n\n        if (actualScale < 1) {\n            this.setState({ scale: actualScale });\n        } else if (scale < 1) {\n            this.setState({ scale: 1 });\n        }\n    }\n\n    render() {\n        const { scale } = this.state;\n\n        return (\n            <div\n                className='auto-scaling-text'\n                style={{ transform: `scale(${scale},${scale})` }}\n                ref={(node) => (this.node = node)}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nclass CalculatorDisplay extends Component {\n    render() {\n        const { value, ...props } = this.props;\n        const language = navigator.language || 'en-US';\n        const escapedKeys = ['e'];\n        let isNumeric = true;\n\n        escapedKeys.forEach((key) => {\n            if (value.includes(key)) isNumeric = false;\n        });\n\n        const parsedValue = isNumeric ? parseFloat(value) : value;\n\n        let formattedValue = parsedValue.toLocaleString(language, {\n            useGrouping: true,\n            maximumFractionDigits: 10,\n        });\n\n        if (value.endsWith('.')) formattedValue += '.';\n\n        return (\n            <div {...props}>\n                <AutoScalingText>{formattedValue}</AutoScalingText>\n            </div>\n        );\n    }\n}\n\nclass CalculatorKey extends Component {\n    render() {\n        const { onPress, className, ...props } = this.props;\n\n        return (\n            <PointTarget onPoint={onPress}>\n                <button className={`calculator-key ${className}`} {...props} />\n            </PointTarget>\n        );\n    }\n}\n\nclass SimpleCalculator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            displayValue1: '0',\n            displayValue2: '0',\n            operator: null,\n            waitingForOperand: false,\n            selectedType: 'area',\n            unit1: 'mm2',\n            unit2: 'mm2',\n            type: null,\n            types: {\n                area: ['mm2', 'cm2', 'm2', 'km2', 'in2', 'ft2'],\n                length: ['mm', 'cm', 'km', 'm', 'in', 'ft', 'mi'],\n                temperature: ['C', 'K', 'F', 'R'],\n                volume: ['l', 'ml', 'kl', 'mm3', 'cm3', 'km3'],\n                mass: ['mg', 'kg', 'g', 'oz', 'lb', 't'],\n                data: ['b', 'Kb', 'Mb'],\n                speed: ['m/s', 'km/h', 'm/h', 'knot', 'ft/s'],\n                time: ['ms', 's', 'h', 'd', 'week', 'month', 'year'],\n            },\n        };\n        this.changeSelectOptionHandler = this.changeSelectOptionHandler.bind(this);\n    }\n\n    changeSelectOptionHandler(event) {\n        this.setState({\n            selectedType: event.target.value,\n            unit1: this.state.types[event.target.value][0],\n            unit2: this.state.types[event.target.value][0],\n            displayValue1: '0',\n            displayValue2: '0',\n        });\n        event.preventDefault();\n    }\n\n    clearAll() {\n        this.setState({\n            value: null,\n            displayValue1: '0',\n            displayValue2: '0',\n            operator: null,\n            waitingForOperand: false,\n        });\n    }\n\n    clearDisplay() {\n        this.setState({\n            displayValue1: '0',\n            displayValue2: '0',\n        });\n    }\n\n    clearLastChar() {\n        const { displayValue1 } = this.state;\n        this.setState({\n            displayValue1: displayValue1.substring(0, displayValue1.length - 1) || '0',\n        });\n    }\n\n    toggleSign() {\n        const { displayValue1 } = this.state;\n        const newValue = parseFloat(displayValue1) * -1;\n\n        this.setState({\n            displayValue1: String(newValue),\n        });\n    }\n\n    inputDot() {\n        const { displayValue1 } = this.state;\n\n        if (!/\\./.test(displayValue1)) {\n            this.setState({\n                displayValue1: displayValue1 + '.',\n                waitingForOperand: false,\n            });\n        }\n    }\n\n    inputDigit(digit) {\n        const { displayValue1, waitingForOperand } = this.state;\n\n        if (waitingForOperand) {\n            this.setState({\n                displayValue1: String(digit),\n                waitingForOperand: false,\n            });\n        } else {\n            const hasDot = displayValue1.includes('.');\n            const integer = displayValue1.split('.')[0];\n\n            if (!hasDot && integer.length >= 10) return;\n\n            this.setState({\n                displayValue1: displayValue1 === '0' ? String(digit) : displayValue1 + digit,\n            });\n        }\n    }\n\n    handleKeyDown = (event) => {\n        let { key } = event;\n\n        if (/\\d/.test(key)) {\n            event.preventDefault();\n            this.inputDigit(parseInt(key, 10));\n        } else if (key === '.') {\n            event.preventDefault();\n            this.inputDot();\n        } else if (key === 'Backspace') {\n            event.preventDefault();\n            this.clearLastChar();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n        if (this.state.selectedType === '') {\n            this.setState({\n                selectedType: 'area',\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    render() {\n        let options = null;\n        const { displayValue1, displayValue2, unit1, unit2 } = this.state;\n        const clearDisplay = displayValue1 !== '0';\n        const clearText = clearDisplay ? 'C' : 'AC';\n\n        const handleChange = (event) => {\n            this.setState({\n                unit1: event.target.value,\n                displayValue2: '0',\n            });\n            event.preventDefault();\n        };\n\n        const handleChange2 = (event) => {\n            this.setState({\n                unit2: event.target.value,\n                displayValue2: '0',\n            });\n            event.preventDefault();\n        };\n\n        const getResult = () => {\n            axios\n                .get(\n                    `https://converter.doxxie.live/convert?from=${this.state.unit1}&to=${this.state.unit2}&amount=${this.state.displayValue1}`\n                )\n                .then((res) => {\n                    this.setState({\n                        displayValue2: res.data.converted,\n                    });\n                });\n        };\n\n        const getSwitch = () => {\n            var displayTmp = displayValue1;\n            var unitTmp = unit1;\n            this.setState({\n                displayValue1: displayValue2,\n                displayValue2: displayTmp,\n                unit1: unit2,\n                unit2: unitTmp,\n            });\n        };\n\n        this.state.type = this.state.types[this.state.selectedType];\n\n        if (this.state.type) {\n            options = this.state.type.map((el) => <option key={el}>{el}</option>);\n        }\n\n        return (\n            <div id='unit-converter'>\n                <h1 className='blue-color align-center scope-title'>\n                    <span className='yellow-color'>{'[ '}</span>Unit Converter\n                    <span className='yellow-color'>{' ]'}</span>\n                </h1>\n                <div id='measurement'>\n                    <button onClick={this.changeSelectOptionHandler} value='area'>\n                        Area\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='length'>\n                        Length\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='temperature'>\n                        Temperature\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='volume'>\n                        Volume\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='mass'>\n                        Mass\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='data'>\n                        Data\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='speed'>\n                        Speed\n                    </button>\n                    <button onClick={this.changeSelectOptionHandler} value='time'>\n                        Time\n                    </button>\n                </div>\n                <div className='calculator-body'>\n                    <div className='resultContainer'>\n                        <div className='first-input'>\n                            <select value={this.state.unit1} onChange={handleChange}>\n                                {options}\n                            </select>\n                            <p>\n                                <CalculatorDisplay value={displayValue1} />\n                            </p>\n                        </div>\n                        <div className='second-input'>\n                            <select value={this.state.unit2} onChange={handleChange2}>\n                                {options}\n                            </select>\n                            <p>\n                                <CalculatorDisplay value={displayValue2} />\n                            </p>\n                        </div>\n                    </div>\n                    <div className='unit-converter-btn'>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(7)}>\n                            7\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(8)}>\n                            8\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(9)}>\n                            9\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-light-background' onPress={() => this.clearLastChar()}>\n                            <i class='fas fa-backspace'></i>\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(4)}>\n                            4\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(5)}>\n                            5\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(6)}>\n                            6\n                        </CalculatorKey>\n                        <CalculatorKey\n                            className='blue-light-background'\n                            onPress={() => (clearDisplay ? this.clearDisplay() : this.clearAll())}>\n                            {clearText}\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(1)}>\n                            1\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(2)}>\n                            2\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(3)}>\n                            3\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-light-background' onPress={getSwitch}>\n                            <HiSwitchVertical className='switch-icon' />\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.toggleSign()}>\n                            ±\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDigit(0)}>\n                            0\n                        </CalculatorKey>\n                        <CalculatorKey className='blue-background' onPress={() => this.inputDot()}>\n                            .\n                        </CalculatorKey>\n                        <CalculatorKey className='black-color yellow-background' onPress={getResult}>\n                            <IoMdReturnLeft />\n                        </CalculatorKey>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SimpleCalculator;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/SaveList.css\";\n\nimport { getRandomizer, exportRandomzier } from \"../service/auth\";\n\nconst SaveList = () => {\n  const [randomizerList, setRandomizerList] = useState([]);\n\n  useEffect(async () => {\n    const list = await getRandomizer();\n\n    if (list) setRandomizerList(list);\n  }, []);\n  return (\n    <div id=\"save-list\">\n      <h1 className=\"blue-color align-center scope-title\">\n        <span className=\"yellow-color\">{\"[ \"}</span>Save List\n        <span className=\"yellow-color\">{\" ]\"}</span>\n      </h1>\n      <div id=\"wrapper\">\n        <table>\n          <tr>\n            <th>#</th>\n            <th>Type</th>\n            <th>Dataset</th>\n            <th>Result</th>\n            <th>Created Date</th>\n          </tr>\n          {randomizerList &&\n            randomizerList.map(\n              ({ name, dataset, type, createdAt, result }, idx) => (\n                <tr>\n                  <td>{idx + 1}</td>\n                  <td>{name}</td>\n                  <td>{dataset.join(\", \")}</td>\n                  <td>\n                    {type === \"individual\" ? (\n                      { result }\n                    ) : (\n                      <ol>\n                        {result.map((res) => (\n                          <li>{res}</li>\n                        ))}\n                      </ol>\n                    )}\n                  </td>\n                  <td>{createdAt}</td>\n                </tr>\n              )\n            )}\n        </table>\n      </div>\n      <div>\n        <button onClick={() => exportRandomzier()} type=\"submit\">\n          Export\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveList;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/Randomizer.css\";\nimport { MdSave, MdFileDownload } from \"react-icons/md\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { onSubmitRandomizer, saveRandomizer } from \"../service/auth\";\nimport { formatName, randomizers } from \"../service/helper\";\n\nconst Picker = ({ name, label = \"Dataset\", quantityLabel, type = 1 }) => {\n  const history = useHistory();\n  const handleCategories = (value) => history.push(`/${value}`);\n\n  const [result, setResult] = useState(null);\n  const [randomizerId, setRandomizerId] = useState(null);\n  const { register, errors, reset, handleSubmit } = useForm({\n    dataset: \"\",\n    criteriaMode: \"all\",\n  });\n\n  useEffect(() => {\n    setResult(null);\n    setRandomizerId(null);\n    reset();\n  }, [name]);\n\n  const onSubmit = async (data) => {\n    const { id, result } = await onSubmitRandomizer(data);\n\n    if (result) setResult(result);\n    if (id) setRandomizerId(id);\n  };\n\n  return (\n    <div id={name}>\n      <h1 className=\"blue-color align-center scope-title\">\n        <span className=\"yellow-color\">{\"[ \"}</span>\n        {formatName(name)}\n        <span className=\"yellow-color\">{\" ]\"}</span>\n      </h1>\n      <div className=\"flex-container\">\n        {type === 1 && (\n          <div className=\"random-result\">{result && <p>{result}</p>}</div>\n        )}\n\n        {type === 2 && (\n          <div className=\"random-result\">\n            {result?.map?.((each, i) => (\n              <table key={\"table-\" + i}>\n                <thead>\n                  <tr>\n                    <th colSpan=\"2\">Group #{i + 1}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {each &&\n                    each.map((item, j) => (\n                      <tr key={\"tr-\" + j}>\n                        <td>{item}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            ))}\n          </div>\n        )}\n\n        {type === 3 && (\n          <div className=\"random-result\">\n            <ol>\n              {result?.map?.((res) => (\n                <li>{res}</li>\n              ))}\n            </ol>\n          </div>\n        )}\n\n        <div className=\"random-setup\">\n          <div className=\"dataset\">\n            <label>Randomizer</label>\n            <br />\n            <select\n              name=\"type\"\n              onChange={(e) => handleCategories(e.target.value)}\n              ref={register({\n                required: \"This is required\",\n              })}\n            >\n              {randomizers?.map(({ name: _name }) => (\n                <option key={_name} value={_name} selected={name === _name}>\n                  {formatName(_name)}\n                </option>\n              ))}\n            </select>\n          </div>\n          <form className=\"data-input\" onSubmit={handleSubmit(onSubmit)}>\n            <label>{label}</label>\n            <br />\n            <textarea\n              name=\"dataset\"\n              rows=\"10\"\n              cols=\"70\"\n              ref={register({\n                required: \"This is required\",\n              })}\n            />\n\n            {type !== 1 && (\n              <>\n                <label>{quantityLabel}</label>\n                <br />\n                <input\n                  type=\"number\"\n                  name=\"quantity\"\n                  min=\"1\"\n                  max=\"100\"\n                  defaultValue={1}\n                  placeholder=\"1\"\n                  ref={register({\n                    required: \"This is required\",\n                  })}\n                />\n              </>\n            )}\n\n            <div className=\"randomizer-btn\" style={{ marginTop: \"20px\" }}>\n              <button type=\"submit\">Start</button>\n            </div>\n          </form>\n\n          {randomizerId && (\n            <div className=\"save-export\">\n              <button onClick={() => saveRandomizer(randomizerId)}>\n                <MdSave className=\"save-icon\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Picker;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/header.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillCaretDown, AiOutlineClose } from \"react-icons/ai\";\nimport { MdAccountCircle, MdExpandMore } from \"react-icons/md\";\nimport { FiMenu } from \"react-icons/fi\";\n\nimport { logout } from \"../service/auth\";\nimport { AuthContext } from \"../App\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst Header = ({ user }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { dispatch } = React.useContext(AuthContext);\n  const [showMenu, setShowMenu] = useState(false);\n  const [showMenuSide, setShowMenuSide] = useState(false);\n  const drop = useRef(null);\n\n  const onLogout = async () => {\n    const res = await logout();\n    history.push(\"/\");\n    dispatch({ type: \"SET_USER\" });\n  };\n\n  useEffect(() => {\n    setShowMenu(false);\n    setShowMenuSide(false);\n  }, [location]);\n\n  const handleClick = (e) => {\n    if (!e.target.closest(`.${drop.current.className}`) && showMenu) {\n      setShowMenu(false);\n    }\n  };\n\n  return (\n    <>\n      <div id=\"header\">\n        <div id=\"left-navbar\" className=\"navbar blue\">\n          <Link to=\"/\" className=\"brand\">\n            KASHIO\n          </Link>\n          <div className=\"dropdown\">\n            <button type=\"button\" className=\"dropdown-btn\">\n              Calculator\n              <AiFillCaretDown className=\"caret-icon\" />\n            </button>\n            <div className=\"dropdown-content display-none\">\n              <Link to=\"/\" className=\"dropdown-link\">\n                Simple Calculator\n              </Link>\n              <hr />\n              <Link to=\"/scientific-calculator\" className=\"dropdown-link\">\n                Scientific Calculator\n              </Link>\n            </div>\n          </div>\n          <Link to=\"/unit-converter\" className=\"link\">\n            Unit Converter\n          </Link>\n          {user.isAuthenticated && (\n            <div className=\"dropdown\">\n              <button className=\"dropdown-btn\">\n                Randomizer\n                <AiFillCaretDown className=\"caret-icon\" />\n              </button>\n              <div className=\"dropdown-content display-none\">\n                <Link to=\"/team-generator\" className=\"dropdown-link\">\n                  Team Generator\n                </Link>\n                <hr />\n                <Link to=\"/name-picker\" className=\"dropdown-link\">\n                  Name Picker\n                </Link>\n                <hr />\n                <Link to=\"/yes-or-no\" className=\"dropdown-link\">\n                  Yes or No\n                </Link>\n                <hr />\n                <Link to=\"/decision-maker\" className=\"dropdown-link\">\n                  Decision Maker\n                </Link>\n                <hr />\n                <Link to=\"/random-picker\" className=\"dropdown-link\">\n                  Random Picker\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n        <div id=\"right-navbar\" style={{ display: \"flex\" }}>\n          {user.isAuthenticated ? (\n            <div>\n              <button\n                type=\"button\"\n                ref={drop}\n                className=\"dropdown-btn no-pr-navbar\"\n                onClick={() => setShowMenu((showMenu) => !showMenu)}\n              >\n                <MdAccountCircle className=\"account-icon\" />\n              </button>\n              {showMenu && (\n                <div className=\"account-content\">\n                  <div className=\"dropdown-link\">{user.name}</div>\n                  <hr />\n                  <Link to=\"/save-list\" className=\"dropdown-link\">\n                    Save List\n                  </Link>\n                  <hr />\n                  <div onClick={onLogout} className=\"dropdown-link\">\n                    Logout\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <Link to=\"/login\" className=\"link\">\n                Login\n              </Link>\n              <Link to=\"/registration\" className=\"link no-pr-navbar\">\n                Registration\n              </Link>\n            </div>\n          )}\n\n          <button\n            type=\"button\"\n            id=\"menu-icon\"\n            className=\"dropdown-btn no-pr-navbar display-none\"\n            onClick={() => setShowMenuSide((showMenuSide) => !showMenuSide)}\n          >\n            <FiMenu className=\"menu-icon\" />\n          </button>\n        </div>\n      </div>\n\n      {showMenuSide && (\n        <div className=\"menu-side\">\n          <button\n            type=\"button\"\n            className=\"dropdown-btn\"\n            onClick={() => setShowMenuSide((showMenuSide) => !showMenuSide)}\n          >\n            <AiOutlineClose className=\"close-icon\" />\n          </button>\n          <div className=\"menu-side-content\">\n            <div className=\"menu-dropdown\">\n              <button type=\"button\" className=\"menu-side-btn\">\n                Calculator\n                <MdExpandMore className=\"expand-icon\" />\n              </button>\n              <div className=\"sub-menu display-none\">\n                <Link to=\"/\" className=\"menu-side-link no-mt-menu-side\">\n                  Simple Calculator\n                </Link>\n                <Link to=\"/scientific-calculator\" className=\"menu-side-link\">\n                  Scientific Calculator\n                </Link>\n              </div>\n            </div>\n            <hr />\n            <Link to=\"/unit-converter\" className=\"menu-side-link\">\n              Unit Converter\n            </Link>\n            <hr />\n            {user.isAuthenticated ? (\n              <div className=\"menu-dropdown\">\n                <button type=\"button\" className=\"menu-side-btn\">\n                  Randomizer\n                  <MdExpandMore className=\"expand-icon\" />\n                </button>\n                <div className=\"sub-menu display-none\">\n                  <Link\n                    to=\"/team-generator\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Team Generator\n                  </Link>\n\n                  <Link\n                    to=\"/name-picker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Name Picker\n                  </Link>\n\n                  <Link\n                    to=\"/yes-or-no\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Yes or No\n                  </Link>\n\n                  <Link\n                    to=\"/decision-maker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Decision Maker\n                  </Link>\n\n                  <Link\n                    to=\"/random-picker\"\n                    className=\"menu-side-link no-mt-menu-side\"\n                  >\n                    Random Picker\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <>\n                <Link to=\"/login\" className=\"menu-side-link\">\n                  Login\n                </Link>\n                <hr />\n                <Link to=\"/registration\" className=\"menu-side-link\">\n                  Registration\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../css/footer.css\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\">\n      <p className=\"blue-color\">\n        Created By <span className=\"yellow-color\">Kashio</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Registration from \"./Registration\";\nimport ResetPasswordLink from \"./ResetPasswordLink\";\nimport ResetPassword from \"./ResetPassword\";\nimport SimpleCalculator from \"./SimpleCalculator\";\nimport ScientificCalculator from \"./ScientificCalculator\";\nimport UnitConverter from \"./UnitConverter\";\nimport SaveList from \"./SaveList\";\nimport Picker from \"./Picker\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nimport \"../css/App.css\";\nimport { AuthContext } from \"../App\";\nimport { randomizers } from \"../service/helper\";\n\nconst Main = () => {\n  return (\n    <AuthContext.Consumer>\n      {({ state, dispatch }) => (\n        <div>\n          <Header user={state} />\n          <Switch>\n            <Route exact path=\"/\" component={SimpleCalculator} />\n            <Route path=\"/unit-converter\" component={UnitConverter} />\n            <Route\n              path=\"/scientific-calculator\"\n              component={ScientificCalculator}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/registration\" component={Registration} />\n            <Route\n              exact\n              path=\"/reset-password-link\"\n              component={ResetPasswordLink}\n            />\n            {<Route path=\"/reset-password\" component={ResetPassword} />}\n\n            {state.isAuthenticated && (\n              <Route path=\"/save-list\" component={SaveList} />\n            )}\n\n            {state.isAuthenticated &&\n              randomizers.map((randomizer) => (\n                <Route\n                  exact\n                  key={randomizer.name}\n                  path={`/${randomizer.name}`}\n                  render={() => <Picker {...randomizer} />}\n                />\n              ))}\n            {/* <Route path=\"/team-generator\" component={TeamGenerator} />\n            <Route path=\"/name-picker\" component={NamePicker} />\n            <Route path=\"/yes-or-no\" component={YesOrNo} />\n            <Route path=\"/decision-maker\" component={DecisionMaker} />\n            <Route path=\"/random-picker\" component={RandomPicker} />\n            <Route path=\"/custom-list\" component={CustomList} />{\" \"} */}\n          </Switch>\n          <Footer />\n        </div>\n      )}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { getUser } from \"./service/auth\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const AuthContext = React.createContext();\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  role: null,\n  id: null,\n  email: null,\n\n  alert: {\n    show: false,\n    type: \"error\",\n    msg: \"\",\n  },\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: action.payload?.role === \"user\",\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useEffect(async () => {\n    const user = await getUser();\n    if (user) dispatch({ type: \"SET_USER\", payload: user });\n  }, []);\n\n  return (\n    <Router>\n      <AuthContext.Provider\n        value={{\n          state,\n          dispatch,\n        }}\n      >\n        <ToastContainer />\n        <Main />\n      </AuthContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorker.register();"],"sourceRoot":""}